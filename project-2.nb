(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    192813,       4638]
NotebookOptionsPosition[    168710,       4182]
NotebookOutlinePosition[    176352,       4379]
CellTagsIndexPosition[    176309,       4376]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Report Project 2", "Title",
 CellChangeTimes->{{3.8085618923475904`*^9, 3.8085618924000626`*^9}, {
  3.8099506681501884`*^9, 
  3.809950668738619*^9}},ExpressionUUID->"2e086750-1cf1-4c43-bc57-\
bac07652a650"],

Cell["\<\
Course code: IX1500
Date: 2020-09-24\
\>", "Text",
 CellChangeTimes->{{3.808561896812827*^9, 3.8085619091511745`*^9}, {
  3.809950672398831*^9, 
  3.809950675897472*^9}},ExpressionUUID->"679e81cd-23f2-4ac3-aad0-\
55498a6469d8"],

Cell["\<\
Simon Johannesson, sijohann@kth.se
William Asp, wasp@kth.se\
\>", "Text",
 CellChangeTimes->{{3.8085619137905674`*^9, 
  3.808561940989503*^9}},ExpressionUUID->"39bfcd1a-7896-4364-9d2c-\
9b6c98366775"],

Cell[CellGroupData[{

Cell["Project 2: RSA cryptography", "Chapter",
 CellChangeTimes->{{3.8085645809991565`*^9, 3.8085645839257517`*^9}, {
  3.809951492940298*^9, 
  3.80995159775699*^9}},ExpressionUUID->"2760ab7a-2fed-4ae4-a63f-\
890119ad5062"],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.8085619703701844`*^9, 
  3.808561970443859*^9}},ExpressionUUID->"28ab532a-4f99-4328-b494-\
a8a51a0e3e70"],

Cell[CellGroupData[{

Cell["Task", "Subsection",ExpressionUUID->"4df8543c-22f8-401d-8973-c66d5fa62864"],

Cell[CellGroupData[{

Cell["Task 1", "Subsubsection",
 CellChangeTimes->{{3.808564410179931*^9, 3.8085644117423215`*^9}, {
  3.8099506905622387`*^9, 3.8099506987792535`*^9}, {3.8099510493283367`*^9, 
  3.809951050954025*^9}, {3.8099512066368513`*^9, 
  3.8099512074623504`*^9}},ExpressionUUID->"161333eb-850b-4b36-a9af-\
139375019ff9"],

Cell["\<\
The task consisted of decrypting a message encrypted with RSA, by cracking an \
RSA key.\
\>", "Text",
 CellChangeTimes->{{3.809951220473538*^9, 3.80995122690633*^9}, {
  3.809971725500903*^9, 
  3.8099717683455973`*^9}},ExpressionUUID->"ccc80051-6278-41c5-8265-\
709150a2dc17"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Task 2", "Subsubsection",
 CellChangeTimes->{{3.808564410179931*^9, 3.8085644117423215`*^9}, {
  3.8099506905622387`*^9, 3.8099506987792535`*^9}, {3.8099510493283367`*^9, 
  3.809951050954025*^9}, {3.8099512066368513`*^9, 
  3.8099512361326475`*^9}},ExpressionUUID->"6ea1059a-f803-4929-b3ba-\
5100aa11cd71"],

Cell["\<\
The problem is to write a method that will crack a cipher that is encrypted \
with an RSA key. Then use that same method to determine how long time it \
takes to crack ciphers with RSA keys with public modulus values that are \
between 100 and 200 bits long.

A model should be derived from the data and then predictions should be made \
for how long time it would take to crack ciphers that have n-values that are \
1024, 2048 and 4096 bits long.\
\>", "Text",
 CellChangeTimes->{{3.809951220473538*^9, 3.80995122690633*^9}, {
  3.80997177988481*^9, 
  3.8099720015575*^9}},ExpressionUUID->"e52318ff-628b-42f7-8b29-83386cc983c8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Result", "Subsection",ExpressionUUID->"39a0ef6c-6a2c-4081-9062-84513a76c571"],

Cell[CellGroupData[{

Cell["Task 1", "Subsubsection",
 CellChangeTimes->{{3.808564410179931*^9, 3.8085644117423215`*^9}, {
  3.8099506905622387`*^9, 3.8099506987792535`*^9}, {3.8099510493283367`*^9, 
  3.809951050954025*^9}, {3.8099512066368513`*^9, 
  3.8099512074623504`*^9}},ExpressionUUID->"8d6c936e-55e2-4c7d-b35a-\
12f8d1ebe052"],

Cell["RSA key was cracked. The message that was decrypted was:", "Text",
 CellChangeTimes->{{3.809951220473538*^9, 3.80995122690633*^9}, {
  3.8099553207680387`*^9, 
  3.809955362245244*^9}},ExpressionUUID->"ec1a73b1-02e8-49f5-8010-\
e37498b39e58"],

Cell["\<\
\"Congratulations! You have now managed to crack the RSA cipher. This means \
that you have a pass grade for project 2. If you want to pursue the \
requirements for a higher grade you need to solve one more problem. The quote \
you should encrypt and crack is: 'Simplicity is a great virtue but it \
requires hard work to achieve it and education to appreciate it. And to make \
matters worse: complexity sells better. By Edsger W. Djikstra'           \"\
\>", "Text",
 CellChangeTimes->{{3.8099553647968082`*^9, 3.809955392317952*^9}, {
  3.809955428366148*^9, 
  3.8099554358394213`*^9}},ExpressionUUID->"8687a15d-e4a5-434f-bbcc-\
181842f23fb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Task 2", "Subsubsection",
 CellChangeTimes->{{3.808564410179931*^9, 3.8085644117423215`*^9}, {
  3.8099506905622387`*^9, 3.8099506987792535`*^9}, {3.8099510493283367`*^9, 
  3.809951050954025*^9}, {3.8099512066368513`*^9, 
  3.8099512361326475`*^9}},ExpressionUUID->"f1a333c4-0c37-483e-967d-\
42f972d5edb6"],

Cell[TextData[{
 "Times to crack RSA keys are exponential to the to it\[CloseCurlyQuote]s \
n-values bit length.\n\nApproximated time to crack RSA key with n-value with \
bit length 1024:  ",
 Cell[BoxData["7.953620608446152`*^21"], "Output",
  CellChangeTimes->{
   3.8099459016899233`*^9, {3.809945936527602*^9, 3.8099459912299833`*^9}, {
    3.8099460679133377`*^9, 3.8099461061526604`*^9}},ExpressionUUID->
  "aafe9552-98e5-4a87-865f-6167b4657311"],
 "   years\nApproximated time to crack RSA key with n-value with bit length \
2048:  ",
 Cell[BoxData["1.6705945489077296`*^56"], "Output",
  CellChangeTimes->{3.8099461287204466`*^9},ExpressionUUID->
  "e354ba8c-1ba2-48e3-aa44-166d071ed79d"],
 "   years\nApproximated time to crack RSA key with n-value with bit length \
4096:  ",
 Cell[BoxData["7.370270675940812`*^124"], "Output",
  CellChangeTimes->{3.8099463793776393`*^9},ExpressionUUID->
  "a1b62761-4f1a-4898-87a3-a9f663442b25"],
 "  years\n\nThe approximation is based on an individual computers \
performance."
}], "Text",
 CellChangeTimes->{{3.809951220473538*^9, 3.80995122690633*^9}, {
  3.809955486634067*^9, 3.809955516819723*^9}, {3.809955624191427*^9, 
  3.809955758783824*^9}},ExpressionUUID->"070d7647-28f3-4c7a-84a8-\
4ab38baab226"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculations", "Section",
 CellChangeTimes->{{3.808564199640519*^9, 
  3.808564207267666*^9}},ExpressionUUID->"6943093f-8a76-4b29-9b2d-\
76d8c3875b28"],

Cell[CellGroupData[{

Cell["Equations", "Subsection",
 CellChangeTimes->{{3.808564410179931*^9, 3.8085644117423215`*^9}, {
  3.8099506905622387`*^9, 3.8099506987792535`*^9}, {3.8099510493283367`*^9, 
  3.809951050954025*^9}},ExpressionUUID->"7e65a304-4725-4568-8fa8-\
1b4ca87c4741"],

Cell[CellGroupData[{

Cell["Task 1", "Subsubsection",
 CellChangeTimes->{{3.808564410179931*^9, 3.8085644117423215`*^9}, {
  3.8099506905622387`*^9, 3.8099506987792535`*^9}, {3.8099510493283367`*^9, 
  3.809951050954025*^9}, {3.8099512066368513`*^9, 
  3.8099512074623504`*^9}},ExpressionUUID->"977e9433-76ef-40c5-ae1a-\
36140a599b30"],

Cell[TextData[{
 "For Bob to decrypt, he needs to follow the below specification: \n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["n", "Bob"], ">", 
      SubscriptBox["n", "Alice"]}], "\[Implies]", 
     RowBox[{
      SubscriptBox["c", "1"], 
      SubscriptBox["\[Congruent]", 
       SubscriptBox["n", "Bob"]], 
      SubsuperscriptBox["c", "Alice", 
       SubscriptBox["d", "Bob"]]}]}], ",", " ", 
    RowBox[{
     SubscriptBox["m", "Alice"], 
     SubscriptBox["\[Congruent]", 
      SubscriptBox["n", "Alice"]], 
     SubsuperscriptBox["c", "1", 
      SubscriptBox["e", "Alice"]]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["n", "Alice"], ">", 
      SubscriptBox["n", "Bob"]}], "\[Implies]", 
     RowBox[{
      SubscriptBox["c", "1"], 
      SubscriptBox["\[Congruent]", 
       SubscriptBox["n", "Alice"]], 
      SubsuperscriptBox["c", "Alice", 
       SubscriptBox["e", "Alice"]]}]}], ",", " ", 
    RowBox[{
     SubscriptBox["m", "Alice"], 
     SubscriptBox["\[Congruent]", 
      SubscriptBox["n", "Bob"]], 
     SubsuperscriptBox["c", "1", 
      SubscriptBox["d", "Bob"]]}]}], TraditionalForm]}],ExpressionUUID->
  "8bc59025-445e-4504-a975-d2e65531c25c"],
 "\nSo the first step is to determine which statement is true\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["n", "Bob"], ">", 
     SubscriptBox["n", "Alice"]}], "  "}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox["or", TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["n", "Alice"], ">", 
    SubscriptBox["n", "Bob"]}], TraditionalForm]}],ExpressionUUID->
  "0f5aaba2-40e4-4efb-afe8-6dbb3c12acde"]
}], "Text",
 CellChangeTimes->{{3.809940307720191*^9, 3.8099403081182137`*^9}, {
  3.809940433520347*^9, 3.809940441958097*^9}, {3.8099404958071423`*^9, 
  3.8099405995918922`*^9}, {3.809952971715629*^9, 
  3.8099529751924257`*^9}},ExpressionUUID->"bfdc78b0-6913-4ec9-9c18-\
b98878f166ba"],

Cell[TextData[{
 "Since \n ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["n", "Bob"], ">", 
    SubscriptBox["n", "Alice"]}], " ", "=", " ", "True"}]],ExpressionUUID->
  "22efe0fa-0dc0-48aa-b9cb-e07e1da110ed"],
 "\n The decryption to the value m should follow:\n ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["c", "1"], 
    SubscriptBox["\[Congruent]", 
     SubscriptBox["n", "Bob"]], 
    SubsuperscriptBox["c", "Alice", 
     SubscriptBox["d", "Bob"]]}], ",", "\[IndentingNewLine]", " ", 
   RowBox[{
    SubscriptBox["m", "Alice"], 
    SubscriptBox["\[Congruent]", 
     SubscriptBox["n", "Alice"]], 
    SubsuperscriptBox["c", "1", 
     SubscriptBox["e", "Alice"]]}]}]],ExpressionUUID->
  "a4a101f3-7d3a-4963-b601-379455df8f8b"],
 "\n But the Bob\[CloseCurlyQuote]s d value is not known.\n \n It can however \
be calculated, because: \n ",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"p", " ", "q"}]}], ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"p", " ", ",", " ", "q"}], ")"}], " ", "\[Element]", " ", 
      "\[DoubleStruckCapitalP]"}], ",", " ", 
     RowBox[{
     "\[DoubleStruckCapitalP]", " ", "is", " ", "the", " ", "set", " ", "of", 
      " ", "all", " ", "prime", " ", "numbers"}]}], " "}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"\[Phi]", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"p", "-", "1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"q", "-", "1"}], ")"}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"d", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", "1"}]], " ", "mod", " ", "\[Phi]"}]}], TraditionalForm]}],
  ExpressionUUID->"323500d3-b323-4e8c-8ef9-91756717dca3"]
}], "Text",
 CellChangeTimes->{{3.809940618241283*^9, 3.8099407329725637`*^9}, {
  3.80994163646268*^9, 3.809941669144063*^9}, {3.809941727873576*^9, 
  3.8099417734529867`*^9}, {3.809941920804302*^9, 3.8099419357477503`*^9}, {
  3.809942018656739*^9, 3.80994204063367*^9}, {3.809942115058919*^9, 
  3.8099421289396143`*^9}},ExpressionUUID->"c45d03bb-fc00-4a86-b022-\
4a745aa5161a"],

Cell["\<\
Now that the d value has been determined, the decryption can be performed.\
\>", "Text",
 CellChangeTimes->{{3.809942325907576*^9, 
  3.809942377725943*^9}},ExpressionUUID->"62460dc4-4cc0-4e3b-94ec-\
55f9b95cb59c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Task 2", "Subsubsection",
 CellChangeTimes->{{3.808564410179931*^9, 3.8085644117423215`*^9}, {
  3.8099506905622387`*^9, 3.8099506987792535`*^9}, {3.8099510493283367`*^9, 
  3.809951050954025*^9}, {3.8099512066368513`*^9, 
  3.8099512361326475`*^9}},ExpressionUUID->"d6b77e3e-27c5-47b3-a3b5-\
4a7acd51f45c"],

Cell["\<\
First step is to create the functions needed to encode the message string.\
\>", "Text",
 CellChangeTimes->{{3.809944771514947*^9, 3.8099448187279167`*^9}, {
   3.809945057632041*^9, 3.80994507579311*^9}, 
   3.8099524295407267`*^9},ExpressionUUID->"5d2480b5-0804-4b1e-8e25-\
078833cb3ef3"],

Cell[TextData[{
 "Then create an encrypt function that follows the specification below to \
encrypt m and returns cipher cipher: \n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    SubscriptBox["m", "Alice"], "<", 
    SubscriptBox["n", "Bob"]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["c", "Alice"], 
    SubscriptBox["\[Congruent]", 
     SubscriptBox["n", "Bob"]], 
    SubsuperscriptBox["m", "Alice", 
     SubscriptBox["e", "Bob"]]}], TraditionalForm]}],ExpressionUUID->
  "4b2d7229-3b42-4667-88b6-d152682aeb14"]
}], "Text",
 CellChangeTimes->{{3.809944309603228*^9, 3.809944310404779*^9}, {
  3.809944432477107*^9, 3.809944463374872*^9}, {3.80994450304325*^9, 
  3.8099445278513613`*^9}, {3.809944715635725*^9, 3.8099447207308598`*^9}, {
  3.8099448705457907`*^9, 3.809944873686722*^9}, {3.8099452063992233`*^9, 
  3.8099452486481752`*^9}},ExpressionUUID->"e75ff863-4ba3-4480-acbf-\
b50a43a9a96b"],

Cell[TextData[{
 "Create a decryption function that follows the specification for decryption \
: \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "Alice"], 
    SubscriptBox["\[Congruent]", 
     SubscriptBox["n", "Bob"]], 
    SubsuperscriptBox["c", "Alice", 
     SubscriptBox["d", "Bob"]]}], TraditionalForm]],ExpressionUUID->
  "19958b28-73a3-4749-8db3-d7ee2853715a"]
}], "Text",
 CellChangeTimes->{{3.809945407142931*^9, 
  3.809945473536347*^9}},ExpressionUUID->"42cb131c-3fcb-426c-837a-\
8e4bcdee9191"],

Cell["Decoding the m values", "Text",
 CellChangeTimes->{{3.80994715782486*^9, 
  3.809947184059207*^9}},ExpressionUUID->"feb37c92-8227-4d07-9e4d-\
20cb3f693836"],

Cell[TextData[{
 "To decrypt a message encrypted with RSA it is necessary to know the private \
key value d, and the public key value n. The d value can be calculated \n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"p", " ", "q"}]}], ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"p", " ", ",", " ", "q"}], ")"}], " ", "\[Element]", " ", 
      "\[DoubleStruckCapitalP]"}], ",", " ", 
     RowBox[{
     "\[DoubleStruckCapitalP]", " ", "is", " ", "the", " ", "set", " ", "of", 
      " ", "all", " ", "prime", " ", "numbers"}]}], " "}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"\[Phi]", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"p", "-", "1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"q", "-", "1"}], ")"}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"d", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", "1"}]], " ", "mod", " ", "\[Phi]"}]}], TraditionalForm]}],
  ExpressionUUID->"532d2f06-2e6b-4786-90fb-ae0d1b4bbee8"]
}], "Text",
 CellChangeTimes->{{3.8099455895786657`*^9, 
  3.809945765600202*^9}},ExpressionUUID->"faf9b49f-5812-48d0-b8af-\
a90bf8924b18"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Subsection",
 CellChangeTimes->{{3.808564513971869*^9, 3.808564519240144*^9}, {
  3.8099507102527018`*^9, 3.8099507109348774`*^9}, {3.8099510571893396`*^9, 
  3.8099510586135316`*^9}},ExpressionUUID->"1db48066-a568-4f09-a9b7-\
7f37a8e3983c"],

Cell[CellGroupData[{

Cell["Task 1", "Subsubsection",
 CellChangeTimes->{{3.808564410179931*^9, 3.8085644117423215`*^9}, {
  3.8099506905622387`*^9, 3.8099506987792535`*^9}, {3.8099510493283367`*^9, 
  3.809951050954025*^9}, {3.8099512066368513`*^9, 
  3.8099512074623504`*^9}},ExpressionUUID->"c2fe6c5a-7b05-4a35-8914-\
2c11f835cb16"],

Cell["\<\
With an understanding of the RSA encryption and decryption \
protocol/specification it is trivial to understand how an RSA key is cracked. \
Doing it by hand would be difficult but a normal personal computer could \
easily crack the key in the task. Since the message in the task was split up \
in smaller sections, to be able to be encrypted by the short key, the \
encryption had to be performed several times with different ciphers, but the \
same keys, and then combined at a later stage. This was observed to be a \
clever way to encrypt messages that are really too long for the key.\
\>", "Text",
 CellChangeTimes->{{3.809951220473538*^9, 3.80995122690633*^9}, {
  3.809971135012267*^9, 
  3.80997114327209*^9}},ExpressionUUID->"8bc3c27b-16ad-4384-ba45-\
2d65b46fc60b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Task 2", "Subsubsection",
 CellChangeTimes->{{3.808564410179931*^9, 3.8085644117423215`*^9}, {
  3.8099506905622387`*^9, 3.8099506987792535`*^9}, {3.8099510493283367`*^9, 
  3.809951050954025*^9}, {3.8099512066368513`*^9, 
  3.8099512361326475`*^9}},ExpressionUUID->"6898ac68-f453-4f36-8d12-\
041103da9488"],

Cell["\<\
It became clear from the results that it is not practically possible to crack \
RSA keys, if the keys use n-values with large bit lengths. The limiting \
factor is that it is incredibly CPU intensive to factor numbers that are \
products of two large prime numbers.

Since time is a limiting factor when cracking the keys only a few tests were \
run, so the data that was used to derive a model was suboptimal. The reason \
is that the RSA keys were somewhat randomly generated which may have caused \
the crack times to not display in a way that might have been expected, a \
perfect exponential curve. Two ways could have been used to mitigate that \
issue. The first is to not generate the RSA keys randomly. However, it was \
believed that it could cause unforeseen disturbances with the internals of \
the function FactorInteger of which nothing was known. The second way is to \
run the tests several times and calculate averages or medians of the times \
and thus smoothen out the curve. It was however determined to be far too time \
consuming in comparison to the value it would provide for this task. The data \
shows a clear trend but the model will be of poor precision.\
\>", "Text",
 CellChangeTimes->{{3.809951220473538*^9, 3.80995122690633*^9}, {
  3.809971152731608*^9, 
  3.809971182996141*^9}},ExpressionUUID->"26ad0f27-7987-4a67-8c93-\
eab6355d59db"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Diagrams", "Subsection",
 CellChangeTimes->{{3.808564410179931*^9, 3.8085644117423215`*^9}, {
  3.8099506905622387`*^9, 3.8099506987792535`*^9}, {3.8099510493283367`*^9, 
  3.8099510745917835`*^9}},ExpressionUUID->"0d9a9f34-a525-43cf-bd8e-\
0cfedc7628d9"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQGRDrVTa97oBayyB3MdohyCo18prGdfDeE3RDsc
lLGty7+8GcI/EOPgkCWs/t16C4TPEOeQ28tx7ODS3VD98Q6iT9KVr/sehPIT
HBod0i8te3UBwn+Q4PCn81Sb6dRLUPMTHV7/l3l2mvs2hK+Q5KC97JK/xe67
UPuSHGIKC0PyFr2H8BOSHeZqe3EezPoNtT/F4dfsgI6Gw7wOYO4CKF9YGMJ3
SHVYf4H99I0PEhD+g1QHg117LGOsFSD8hjQHlv/RJ/tYtSF8hXSH/LrDLs1P
DCD8A+kOlZVW4VMmOED4CRkO7s8m2kvIOUL4DJkOnvNe/y5oi3YAAEvvZjw=

      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"RSA key length (bits)\"", TraditionalForm], 
    FormBox["\"Time (s)\"", TraditionalForm]},
  AxesOrigin->{97.91666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{483.3333333333338, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Time to crack different length RSA keys\"", TraditionalForm],
  PlotRange->{{97.91666666666667, 200.}, {0, 110.100646}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",ExpressionUUID->"5c79db69-9932-\
4e83-9826-3d0b76a3ccd2"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQGRDrVTa97oBayyB3MdohyCo18prGdfDeE3RDsc
lLGty7+8GcI/EOPgkCWs/t16C4TPEOeQ28tx7ODS3VD98Q6iT9KVr/sehPIT
HBod0i8te3UBwn+Q4PCn81Sb6dRLUPMTHV7/l3l2mvs2hK+Q5KC97JK/xe67
UPuSHGIKC0PyFr2H8BOSHeZqe3EezPoNtT/F4dfsgI6Gw7wOYO4CKF9YGMJ3
SHVYf4H99I0PEhD+g1QHg117LGOsFSD8hjQHlv/RJ/tYtSF8hXSH/LrDLs1P
DCD8A+kOlZVW4VMmOED4CRkO7s8m2kvIOUL4DJkOnvNe/y5oi3YAAEvvZjw=

      "]]}, {
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"RSA public modulus key size (bits)\"", TraditionalForm], 
    FormBox["\"Time (s)\"", TraditionalForm]},
  AxesOrigin->{97.91666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{489.33333333333303`, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Time to crack RSA key\"", TraditionalForm],
  PlotRange->{{97.91666666666667, 200.}, {0, 110.100646}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",ExpressionUUID->"a53c4830-589c-\
40be-aceb-7a6b948f6fe3"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQGRDvwyadN+72M/AOY6RDkIbjOv+9AO5TdEO1xf
WfhYq5wFwj8Q49C8cPauLF8onyHOoXmrxkbZc4xQ/fEOqlf7HlkxMUD5CQ49
J7ZeFvX6uh/Mf5DgsLlS3df75GcIvyHRwdxamll6wmsIXyHJwSp7p+WKjhcQ
/oEkh+VCS70ftrVD+AnJDvktMe6MNg/tIfanOJTP7jjcwvoVwl+Q4iB2hPNR
z78fEL5DqoOvIItft8dfCP9BqoPreYcrmgcYHCD2pzkYhz2L/XKZBcJXSHdw
WZR0q3AuG4R/IN1B/GfMqXsMPBB+QoaDzJfVfZIuUD5DpoOC1OZyq3NCDgBJ
mGTY
      "]]}, {
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"RSA public modulus key size (bits)\"", TraditionalForm], 
    FormBox["\"Time (s)\"", TraditionalForm]},
  AxesOrigin->{97.91666666666667, -3.5684468007681107`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{456.6666666666665, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Time to crack RSA key\"", TraditionalForm],
  PlotRange->{{97.91666666666667, 200.}, {-3.5684468007681107`, 
   4.7013949111047}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.1\"", 0.1, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}}, {-4.605170185988091, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.912023005428146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.506557897319982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.2188758248682006`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.659260036932778, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.5257286443082556`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.4079456086518722`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.912023005428146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.298317366548036, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.703782474656201, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.991464547107982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.214608098422191, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.396929655216146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.551080335043404, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.684611727667927, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.802394763324311, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.907755278982137, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.003065458786462, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.090076835776092, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Input",ExpressionUUID->"db5d34c6-a431-45d8-8aeb-\
590ca41ea82e"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVkFlQUwcYRpMAkkAwl0opRUWiQXAHRWRAub8FqeJCcIOEqFnhhlVF1BEC
WC24DYtBZWkKlEV0ylKNYlC5dyypiFEjohKaBAtYdQoINoKBGEsfznxzHr/D
FKZul1BIJNLWaf7f7ZEFVBKJAybMOZU+RicKPzzNHSdzwLi2JmXVEJ14csHF
btiGA+3ImhTuGzqxRV9K7rXnwPlbvOR6A50Il9ZMXmdwwJdanxjWSSeCT6iG
4udxIOlyCJZZTSdYLQPaJyEc6H+dKBjaRSc+egSWVsg40CX8Y4em1ZEw8OWg
teOCqaUwKy3BgfgYY5s5eZILRMaLRrEvjRjZgDPryLGQtN1zMstiTyypXWrs
PxUL/JPZZ3MaZxAlrU3Lv7XngYXFna85bEdEfPf6wqsCHug9I75YWbaEoU0c
v8h1D1SuCJng6ihExZhZkyjfA/SGBhOphkzUXVy/CZ29F4gfVwbm7yQR+rGf
OfSyvRBYJqE8DLDipvXh3VzXfdC8LaXzoXYKZ9tWSoIU066q8igPMOPJbXnq
0058cKNoZNaOcfz59ZKBtig+kMhMqa+3CW+ofnxTWcyHeq+sM8qiMVyRwtjp
/YwP7Mia5NKoEbzp4JXMflcB7CeqjHHfvMN1UdtS3XcLYMXQOQkvYBD3Stgy
XFYmAKZDOc2oM+D9mameeoMA8K61nluOPsNbEhRzy+YIIYt5SO1y/ne8sYhV
V8kXAvVVa2htXy56V37z04JKIYTK/V2lNDW6rjCZhBmFAF7jsxYwu9E+tUxu
YoqgaqF3UnS+ES19UTL6mS8CNidEo2ANoumeTrrIWhHAtVmdBxPeoffEdYeF
b0XQjPfEVl8aQReejDCOLRRDIK3nn+c3xtAG/fdPHySIAbGUKBx3mtDNCDvf
46oYCp1FYQ3qcZQbIiP5vxUDm+x1w7LYjJ6ttbEWLZHAqaA7pbL2KbT7TbE6
KUEC2EVeWoKfFUVF2W6FjRLQz5Xyw6QkuKc6tNp3ZNqP1x8/XU2Gmw4F9kVL
48DSNZBX+5ICmmKKJGh/HPR00Db2etnCpDnnHL8pDqhsJUW9xw4iSmLQJ//G
wWjGpiMdTTPA0W/XZWtAPFiKe7W/TNnDYA1PdzU9HvjoKGuVHw36ou5erFDF
Q2b+6Ep9jgN80Pl4OJvjYSglPTi41RHSeSpu6BoMctaO+xwYpoO7W/X8tmMY
dDQKtHjQTHjZeEl5Q4UBdi3qYPsBBsj8lIbHrRjcUcb5+x1hwAKldsbb2xi4
tGSMKzIZkKqicdzbMGi/XXvsSB4D7NszPmfdw4ClNv+wWMGANbp94RsfYjD4
skpe2MGASzY+Pb16DJqtR7mNDATW5YaRTQYM9Nknbou/QmCAKljs1IcBlZw/
Z/bXCKyYWZaJ/oUB36bamOeOwH03OrPmNQYI9ZFQ4IXAxLJRafIIBvudmYku
wQgomuny3PcY/HR+iaZzHQKhqxbdqRid/jcrYNlxQKAgUDiz6wMGnq6b3w9v
QMA7tPtawAQGWvf0tPtsBB6pR/+M/ISBpTy7W7YDgbSNTnZSMwY+c8+s9t+N
AL41PLp8arrfvIqJylgEJFphjtKCwa+VV2Ki9yLguCP7yqPPGLxgKlVOAgR+
e17e9bcVA0p1m3u7CIHomFtTX75gsJz1IONYHAL/ATV0PHQ=
        "]]},
      Annotation[#, "Charting`Private`Tag$66045#1"]& ]}, {}}, {{}, {
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQGRDvwyadN+72M/AOY6RDkIbjOv+9AO5TdEO1xf
WfhYq5wFwj8Q49C8cPauLF8onyHOoXmrxkbZc4xQ/fEOqlf7HlkxMUD5CQ49
J7ZeFvX6uh/Mf5DgsLlS3df75GcIvyHRwdxamll6wmsIXyHJwSp7p+WKjhcQ
/oEkh+VCS70ftrVD+AnJDvktMe6MNg/tIfanOJTP7jjcwvoVwl+Q4iB2hPNR
z78fEL5DqoOvIItft8dfCP9BqoPreYcrmgcYHCD2pzkYhz2L/XKZBcJXSHdw
WZR0q3AuG4R/IN1B/GfMqXsMPBB+QoaDzJfVfZIuUD5DpoOC1OZyq3NCDgBJ
mGTY
       "]]}, {
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["x", HoldForm], TraditionalForm], 
    FormBox["y", TraditionalForm]},
  AxesOrigin->{100., -3.617699496954737},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Quiet[
      Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{100, 200}, {-3.617699496954737, 4.100076612617199}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, Quiet[
      Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, {
    Automatic, {{-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}}, {-4.605170185988091, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.912023005428146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.506557897319982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.2188758248682006`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.659260036932778, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.5257286443082556`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.4079456086518722`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.605170185988092, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.0106352940962555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.298317366548036, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Input",ExpressionUUID->"6e406c88-5a2b-4bfb-b371-\
650bd0d5178f"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVl3k0FVwXxo1FZc6QmWSmEoXKeQwhIVKZuZPrutyryVAaFFE0UwmhDBGJ
SEUijZQImUqRsaIZFS+f759z1l77rN8++zlrPWsfNVrolgA+Hh4eibnl//vU
RPsiHh5PJHJC78gcSCOdX8wbfvB54oXvGS/lC2mkojcjvl/QE6NBhs/X3Uwj
uxqYfM8WeqJbe3Lbg7408vnyxORJWU/I7As/2m6XTjptZPoVlnviYu94LUfu
Mqk4t+3eGj9PPH1TK938IoMkx98L16F6Ymhox+3u4Qyya7+SsQLDE5WKOT0z
/JnEgDlYPBPkCfV9+RrJ6zJJjllYzpMwT1i4+imNF2eSpN7k024nPRFQ+qZ2
i2MW2WHYFhB63xOLT9mFmOAKmXatPZ5V44ksE/7D612vkPiwohuv6zwRExfE
3E67QjLux46vqvfEgHfxYGXsFfLSweTonzeeWFk3leDScIVoBV7IOfzNE6/L
ApyrPa6S95ke/UnqXphkrteUjckm7Ec2858s80Kt/LqHXheyyfjQCr0JbS/I
GmtTSwuyySJD4d0ey70Q5jL572JzNjG/f49PaZ0X5nEb8h1Vcsj5Tnn1vG1e
cDDsq2bU5hBHiR7K3WNeeCv0ya5bIo8o3rH0K0ucy5P7/EaaeWTMJ8+7+JQX
Dtx5cijdPI+cyg/dnpPshaQbN/4roOeRZsLneCbLCycbS/7kV+SRbVytNay7
Xvjx/JS/LeUa8XuxU0RuxAtn33mMH6jLJ6FH51VG2HlDpO2rrsSzQjI9NFJD
d/BGiZLCH93eQpJg/+LJZidvnO/v2u39t5DkLTzzWsvNG5y9SvU8+kXk/dkl
nzr8vKFctcrA/1wRcczQlzMN98aELJ/BAfoNontnS/ifHG/MWysb3yZ7k9yV
M9k/cM0ba4z7HMdW3SS2+2SPNF/3RoGrU7iKy01CXf/uZH6JN56+G9zcfOwm
SXkUkOtx3xsa0am5zKmbZH5zZNvdVm/cPyFrWL2rhAyMZBjt5fOB4xkR41/M
UqK6VzgzR9AHIpt4yvkiS4m38J6FzUI+6NK/M6Z+vJS06Gwc0BTzQeE2uebz
haWklv3rfJuCDy7uq1Wx+1FK0kbt/i438UEVTeDS0KFbZMv37zVDgT4I6DjR
dvZ6GTkV7a0vGewDzk36ua7qMlIv/jRlPdcHkfzSa4xflxGsTNuZvMcH3DrT
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
+D8lhU298vA/RCMK7g==
        "]]},
      Annotation[#, "Charting`Private`Tag$86758#1"]& ]}, {}}, {{}, {
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQGRDrVTa97oBayyB3MdohyCo18prGdfDeE3RDsc
lLGty7+8GcI/EOPgkCWs/t16C4TPEOeQ28tx7ODS3VD98Q6iT9KVr/sehPIT
HBod0i8te3UBwn+Q4PCn81Sb6dRLUPMTHV7/l3l2mvs2hK+Q5KC97JK/xe67
UPuSHGIKC0PyFr2H8BOSHeZqe3EezPoNtT/F4dfsgI6Gw7wOYO4CKF9YGMJ3
SHVYf4H99I0PEhD+g1QHg117LGOsFSD8hjQHlv/RJ/tYtSF8hXSH/LrDLs1P
DCD8A+kOlZVW4VMmOED4CRkO7s8m2kvIOUL4DJkOnvNe/y5oi3YAAEvvZjw=

       "]]}, {
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{100.00000306122449`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{100, 205}, {0, 110}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",ExpressionUUID->"5e9b13a5-d9e7-\
4b43-b158-44d5fa553546"]
}, Closed]],

Cell[CellGroupData[{

Cell["Conclusion", "Subsection",
 CellChangeTimes->{{3.808564513971869*^9, 3.808564519240144*^9}, {
  3.8099507102527018`*^9, 3.8099507109348774`*^9}, {3.8099510571893396`*^9, 
  3.8099510586135316`*^9}, {3.809951094855569*^9, 
  3.809951099177025*^9}},ExpressionUUID->"db28806a-e03d-47f0-a595-\
350e6f651e2c"],

Cell["Empty", "Text",
 CellChangeTimes->{{3.808564525334571*^9, 
  3.8085645265717363`*^9}},ExpressionUUID->"9ee581cc-bcff-448a-bcab-\
50960ecada41"],

Cell[CellGroupData[{

Cell["Task 1", "Subsubsection",
 CellChangeTimes->{{3.808564410179931*^9, 3.8085644117423215`*^9}, {
  3.8099506905622387`*^9, 3.8099506987792535`*^9}, {3.8099510493283367`*^9, 
  3.809951050954025*^9}, {3.8099512066368513`*^9, 
  3.8099512074623504`*^9}},ExpressionUUID->"1d2de644-2239-4c75-b4ca-\
9c86d216b911"],

Cell["\<\
RSA keys with n-values consisting of the product of small p and q values are \
easily and quickly cracked.\
\>", "Text",
 CellChangeTimes->{{3.809951220473538*^9, 3.80995122690633*^9}, {
  3.809971193180114*^9, 
  3.809971198762904*^9}},ExpressionUUID->"49af315e-9706-4483-b4fa-\
39eddbe6ee63"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Task 2", "Subsubsection",
 CellChangeTimes->{{3.808564410179931*^9, 3.8085644117423215`*^9}, {
  3.8099506905622387`*^9, 3.8099506987792535`*^9}, {3.8099510493283367`*^9, 
  3.809951050954025*^9}, {3.8099512066368513`*^9, 
  3.8099512361326475`*^9}},ExpressionUUID->"f342ab51-9279-47c5-9865-\
9e8d0473165b"],

Cell["\<\
Although the model that was chosen is considered to have very poor precision \
it is clear that it is practically impossible, with the technology available \
today, to crack RSA keys with high n-values. To derive a model from the data \
is very practical when data that cannot be produced/generated, such as how \
long time would it take to decrypt a very long RSA key, in any reasonable way.\
\>", "Text",
 CellChangeTimes->{{3.809951220473538*^9, 3.80995122690633*^9}, {
  3.809971204547618*^9, 3.809971209147768*^9}, {3.8099715420361013`*^9, 
  3.809971686460103*^9}},ExpressionUUID->"72c1fd5d-fcba-4bfc-819c-\
c8027bd6c1f9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Section",ExpressionUUID->"eb232638-2837-4382-9654-616c94d28459"],

Cell[CellGroupData[{

Cell["Task 1", "Subsection",
 CellChangeTimes->{{3.808564410179931*^9, 3.8085644117423215`*^9}, {
  3.8099506905622387`*^9, 
  3.8099506987792535`*^9}},ExpressionUUID->"f3d26aa5-36c8-4225-84a7-\
f5bd8572d6ad"],

Cell[CellGroupData[{

Cell["Initializing values", "Subsubsection",
 CellChangeTimes->{{3.809951746327169*^9, 3.809951750576771*^9}, {
  3.809951781262211*^9, 
  3.809951785903681*^9}},ExpressionUUID->"b7d15daa-110a-43a0-82dc-\
38fb29ba30a4"],

Cell["\<\
Professor Alice har skickat en uplift till Bob, en av hennes studenter. F\
\[ODoubleDot]r att s\[ADoubleDot]kerst\[ADoubleDot]lla att uppgiften \
verkligen kommer fr\[ARing]n henne s\[ARing] signerar hon meddelandet med hj\
\[ADoubleDot]lp av metoden i avsnitt 2.2.6 ovan. Du skall l\[ODoubleDot]sa \
problemet, men d\[ARing] m\[ARing]ste du b\[ODoubleDot]rja med att kn\
\[ADoubleDot]cka kryptot som skickats till Bob. Anv\[ADoubleDot]nd basen 256 \
n\[ADoubleDot]r du \[ODoubleDot]vers\[ADoubleDot]tter till ASCII-kod.\
\>", "Text",
 CellChangeTimes->{{3.809940059309902*^9, 3.809940065083527*^9}, 
   3.809940134840457*^9, 
   3.80995174433738*^9},ExpressionUUID->"374696a4-00ca-4ea0-8364-\
3560bf974aba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "nAlice", "=", "173067809568650650254651948453757071454112069885961677"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eAlice", "=", "3287"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "nBob", "=", "685746563565213593998991828025682278267914215114717399"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eBob", "=", "4141"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cipher", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
    "531301545192540526538562996119874005598394953581889980", ",", 
     "253835033608045670746495776870704267971322752833501069", ",", 
     "295494800605225121649532827884904960119794411935318191", ",", 
     "356889556103931306723253587635046687635524222913958813", ",", 
     "665170545927968575573343996326340876350432556729975135", ",", 
     "469306660346680678018973492642493227583506074572127129", ",", 
     "669864849052286592977992159216572272286187322129900601", ",", 
     "67443874762881965068907073487271177009837307742146186", ",", 
     "206963942810038249337504906086720011644974589155509486", ",", 
     "12361993292067904922905562651618411716312523967763152", ",", 
     "596105513854241524904599343954988876751152556443182365", ",", 
     "118957298362710351312498532203563871421459266333348755", ",", 
     "439001139546986502255653331254032172395219069204122787", ",", 
     "34270241039450294802362132705578076084635135877988959", ",", 
     "627063000861103394259253981356349035768721801641804458", ",", 
     "634987884160816833480771068222516460351076121185551581", ",", 
     "398172872629132780981103160396970382112041774336326577", ",", 
     "381781261026724515120629160669181445588834230492536128", ",", 
     "164633715063442543263858143455229965317936486655924024", ",", 
     "552098460217762425462814236077839572074083170864774859", ",", 
     "683958399609386999975662847975279796030167103223715834", ",", 
     "263312158667004158391146985765292815817678708765542785"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.80994016155477*^9, 3.809940168049244*^9}, 
   3.8099402079865313`*^9},
 CellLabel->
  "In[240]:=",ExpressionUUID->"c2cd1dfb-a242-46ac-bc5e-67af2039550a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Solution", "Subsubsection",
 CellChangeTimes->{{3.8099400223144617`*^9, 3.809940046060658*^9}, {
  3.8099402903243647`*^9, 3.809940305863391*^9}, {3.809942421078618*^9, 
  3.809942422107708*^9}},ExpressionUUID->"63d55d2f-32d7-4024-b0dd-\
a319ff0bd7ec"],

Cell[TextData[{
 "For Bob to decrypt, he needs to follow the below specification: \n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["n", "Bob"], ">", 
      SubscriptBox["n", "Alice"]}], "\[Implies]", 
     RowBox[{
      SubscriptBox["c", "1"], 
      SubscriptBox["\[Congruent]", 
       SubscriptBox["n", "Bob"]], 
      SubsuperscriptBox["c", "Alice", 
       SubscriptBox["d", "Bob"]]}]}], ",", " ", 
    RowBox[{
     SubscriptBox["m", "Alice"], 
     SubscriptBox["\[Congruent]", 
      SubscriptBox["n", "Alice"]], 
     SubsuperscriptBox["c", "1", 
      SubscriptBox["e", "Alice"]]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["n", "Alice"], ">", 
      SubscriptBox["n", "Bob"]}], "\[Implies]", 
     RowBox[{
      SubscriptBox["c", "1"], 
      SubscriptBox["\[Congruent]", 
       SubscriptBox["n", "Alice"]], 
      SubsuperscriptBox["c", "Alice", 
       SubscriptBox["e", "Alice"]]}]}], ",", " ", 
    RowBox[{
     SubscriptBox["m", "Alice"], 
     SubscriptBox["\[Congruent]", 
      SubscriptBox["n", "Bob"]], 
     SubsuperscriptBox["c", "1", 
      SubscriptBox["d", "Bob"]]}]}], TraditionalForm]}],ExpressionUUID->
  "01d7f7a8-93c2-4892-a4b1-18fa7a6f11fe"],
 "\nSo the first determine which statement is true\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["n", "Bob"], ">", 
     SubscriptBox["n", "Alice"]}], "  "}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox["or", TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["n", "Alice"], ">", 
    SubscriptBox["n", "Bob"]}], TraditionalForm]}],ExpressionUUID->
  "1e7b5fe9-f919-41a8-9815-3693f01ba163"]
}], "Text",
 CellChangeTimes->{{3.809940307720191*^9, 3.8099403081182137`*^9}, {
  3.809940433520347*^9, 3.809940441958097*^9}, {3.8099404958071423`*^9, 
  3.8099405995918922`*^9}},ExpressionUUID->"3164d61f-89be-4664-97d3-\
9cf3b8581302"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nBob", ">", "nAlice"}]], "Input",
 CellChangeTimes->{{3.809940610244192*^9, 3.809940611400157*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"f661cc54-0508-4f56-8d2c-760aa9023621"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.809940614319615*^9},
 CellLabel->
  "Out[245]=",ExpressionUUID->"097eb17b-0634-419e-98c7-d995fc142114"]
}, Open  ]],

Cell[TextData[{
 "Since \n ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["n", "Bob"], ">", 
    SubscriptBox["n", "Alice"]}], " ", "=", " ", "True"}]],ExpressionUUID->
  "87904bf6-831d-4c95-9526-9294a15913e3"],
 "\n The decryption to the value m should follow:\n ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["c", "1"], 
    SubscriptBox["\[Congruent]", 
     SubscriptBox["n", "Bob"]], 
    SubsuperscriptBox["c", "Alice", 
     SubscriptBox["d", "Bob"]]}], ",", "\[IndentingNewLine]", " ", 
   RowBox[{
    SubscriptBox["m", "Alice"], 
    SubscriptBox["\[Congruent]", 
     SubscriptBox["n", "Alice"]], 
    SubsuperscriptBox["c", "1", 
     SubscriptBox["e", "Alice"]]}]}]],ExpressionUUID->
  "01508189-f749-437b-94a1-3bb228d7ed30"],
 "\n But the Bob\[CloseCurlyQuote]s d value is not known.\n \n It can however \
be calculated, because: \n ",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"p", " ", "q"}]}], ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"p", " ", ",", " ", "q"}], ")"}], " ", "\[Element]", " ", 
      "\[DoubleStruckCapitalP]"}], ",", " ", 
     RowBox[{
     "\[DoubleStruckCapitalP]", " ", "is", " ", "the", " ", "set", " ", "of", 
      " ", "all", " ", "prime", " ", "numbers"}]}], " "}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"\[Phi]", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"p", "-", "1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"q", "-", "1"}], ")"}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"d", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", "1"}]], " ", "mod", " ", "\[Phi]"}]}], TraditionalForm]}],
  ExpressionUUID->"0af551f4-33b7-49ee-9854-c389f3d0080f"]
}], "Text",
 CellChangeTimes->{{3.809940618241283*^9, 3.8099407329725637`*^9}, {
  3.80994163646268*^9, 3.809941669144063*^9}, {3.809941727873576*^9, 
  3.8099417734529867`*^9}, {3.809941920804302*^9, 3.8099419357477503`*^9}, {
  3.809942018656739*^9, 3.80994204063367*^9}, {3.809942115058919*^9, 
  3.8099421289396143`*^9}},ExpressionUUID->"ce88c1f0-b022-42f8-8bf6-\
e0133b673136"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pBob", ",", "qBob"}], "}"}], "=", 
   RowBox[{
    RowBox[{"FactorInteger", "[", "nBob", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]Bob", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"pBob", "-", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"qBob", "-", "1"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dBob", "=", 
   RowBox[{"PowerMod", "[", 
    RowBox[{"eBob", ",", 
     RowBox[{"-", "1"}], ",", "\[Phi]Bob"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8099421769528418`*^9, 3.8099422689598093`*^9}, {
  3.809942308184011*^9, 3.8099423236026382`*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"3a44aea2-a135-4021-a9b2-b3e62ae205d2"],

Cell["\<\
Now that the d value has been determined, the decryption can be performed.\
\>", "Text",
 CellChangeTimes->{{3.809942325907576*^9, 
  3.809942377725943*^9}},ExpressionUUID->"a97a6187-5376-4a24-94a2-\
901e32c32e82"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"c1", "=", 
   RowBox[{"PowerMod", "[", 
    RowBox[{"cipher", ",", "dBob", ",", "nBob"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mFromAlice", "=", 
   RowBox[{"PowerMod", "[", 
    RowBox[{"c1", ",", "eAlice", ",", "nAlice"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.809841799252993*^9, 3.8098418602813573`*^9}, {
   3.8098419346040163`*^9, 3.809841938320103*^9}, 3.809842763340005*^9, {
   3.809842906407734*^9, 3.809842915267744*^9}, 3.8098438446599383`*^9, 
   3.8099407613125277`*^9, 3.809941391567729*^9, 3.809941515578824*^9, {
   3.809941582827197*^9, 3.809941586886971*^9}, 3.809942385352715*^9, {
   3.809942547403591*^9, 
   3.8099425702804213`*^9}},ExpressionUUID->"7817cb70-2dee-4744-81ed-\
d3be5c512415"],

Cell["\<\
The value m was encoded from ascii letters to a number by Alice, so it must \
be decoded back to ascii letters. The base 256 was used.

\
\>", "Text",
 CellChangeTimes->{{3.809940771567494*^9, 3.809940838969778*^9}, {
  3.809941263422608*^9, 3.809941321174665*^9}, {3.809942676057205*^9, 
  3.809942678735591*^9}},ExpressionUUID->"051f0994-c52b-4ca9-8d76-\
787468cfa636"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"B", "=", " ", "256"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ascii", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", 
    RowBox[{"Length", "[", "mFromAlice", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"q", "=", 
     RowBox[{"mFromAlice", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
    RowBox[{"While", "[", 
     RowBox[{
      RowBox[{"q", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"ascii", ",", 
         RowBox[{"Mod", "[", 
          RowBox[{"q", ",", "B"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"q", "=", 
        RowBox[{"Quotient", "[", 
         RowBox[{"q", ",", "B"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
    ";"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FromCharacterCode", "[", "ascii", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"msg", "=", 
  RowBox[{"FromCharacterCode", "[", "ascii", "]"}]}]}], "Input",
 CellChangeTimes->{{3.809941326975004*^9, 3.809941362862138*^9}, 
   3.809942396826346*^9},
 CellLabel->
  "In[274]:=",ExpressionUUID->"c4c8cf65-675b-4832-8469-e7d75afba18b"],

Cell[BoxData["\<\"Congratulations! You have now managed to crack the RSA \
cipher. This means that you have a pass grade for project 2. If you want to \
pursue the requirements for a higher grade you need to solve one more \
problem. The quote you should encrypt and crack is: 'Simplicity is a great \
virtue but it requires hard work to achieve it and education to appreciate \
it. And to make matters worse: complexity sells better. By Edsger W. \
Djikstra'           \"\>"], "Output",
 CellChangeTimes->{{3.809942390005858*^9, 3.809942399355702*^9}},
 CellLabel->
  "Out[278]=",ExpressionUUID->"7b11aa9f-8a06-416c-a3ad-5a8e92b92c0d"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Task 2", "Subsection",
 CellChangeTimes->{{3.808564513971869*^9, 3.808564519240144*^9}, {
  3.8099507102527018`*^9, 
  3.8099507109348774`*^9}},ExpressionUUID->"d8b159bb-aca1-4212-b079-\
a4cc4a19d00a"],

Cell[CellGroupData[{

Cell["Initializing values", "Subsubsection",
 CellChangeTimes->{{3.809951920009428*^9, 
  3.8099519279951487`*^9}},ExpressionUUID->"4b2e0a48-3637-4204-b7ab-\
99bfa65a1493"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.80994434230584*^9, 3.8099443710134487`*^9}},
 CellLabel->
  "In[282]:=",ExpressionUUID->"64efcf8e-e9e4-43e4-bb40-259c47c9aa06"],

Cell[TextData[{
 "Skriv en metod ",
 StyleBox["RSAcrack[cipher,n,e]",
  FontFamily->"Courier New",
  FontWeight->"Regular"],
 " som kn\[ADoubleDot]cker ett standard RSA krypto och returnerar klartext fr\
\[ARing]n en matris av krypterade tal. Unders\[ODoubleDot]k sedan hur l\
\[ARing]ng tid det tar att kn\[ADoubleDot]cka kryptot av meddelandet fr\
\[ARing]n uppgiften ovan med olika storlekar p\[ARing] nyckeln ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "190d56bc-5e95-4871-b78e-8863970e9c60"],
 " (100-200 bits). Visualisera resultet i en graf. L\[ADoubleDot]s sedan \
noggrant avsnitt 2.3 ovan och anpassa en modell till de data ni har \
f\[ARing]tt fram. Anv\[ADoubleDot]nd modellen f\[ODoubleDot]r att f\
\[ODoubleDot]ruts\[ADoubleDot]ga hur l\[ARing]ng tid det skulle ta att kn\
\[ADoubleDot]cka ett skiffer d\[ADoubleDot]r ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "bb0e733d-a23a-435f-ad4c-2684d01188c8"],
 " \[ADoubleDot]r 1024 bit, 2048 bit eller 4096 bit l\[ARing]ng."
}], "Text",ExpressionUUID->"30422b7d-37fc-4c97-ba43-6d4177b19e15"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "message", " ", "=", 
   "\"\<Simplicity is a great virtue but it requires hard work to achieve it \
and education to appreciate it. And to make matters worse: complexity sells \
better. By Edsger W. Djikstra\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.809944286053988*^9, 3.809944286260466*^9}, 
   3.809944326641754*^9},
 CellLabel->
  "In[283]:=",ExpressionUUID->"5115463d-8e49-41e0-af6c-bd46cc94f883"]
}, Closed]],

Cell[CellGroupData[{

Cell["Encryption helper functions", "Subsubsection",
 CellChangeTimes->{{3.8099452813882647`*^9, 
  3.8099452981920557`*^9}},ExpressionUUID->"2d061427-8409-441e-a0dc-\
27802a482a77"],

Cell["\<\
First step is to create the functions needed to encode the message string.
\
\>", "Text",
 CellChangeTimes->{{3.809944771514947*^9, 3.8099448187279167`*^9}, {
  3.809945057632041*^9, 
  3.80994507579311*^9}},ExpressionUUID->"293c9947-e886-4ae1-9ba8-\
36a59bb32b6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "takes", " ", "a", " ", "message", " ", "string", " ", "and", " ", "a", 
     " ", "base"}], ",", " ", 
    RowBox[{"encodes", " ", "and", " ", "returns", " ", "m"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"messageToM", "[", 
    RowBox[{"message_", ",", "base_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"ToCharacterCode", "[", "message", "]"}], ".", 
    SuperscriptBox["base", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"StringLength", "[", "message", "]"}], "]"}], "-", 
      "1"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.809945012473736*^9, 3.8099450238969193`*^9}, {
  3.809945077505187*^9, 3.809945159204666*^9}, {3.809945195650673*^9, 
  3.809945198269373*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"b3ab3323-8423-4c8a-842b-ce2b79caf9b5"],

Cell[TextData[{
 "Then create an encrypt function that follows the specification below to \
encrypt m and returns cipher cipher: \n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    SubscriptBox["m", "Alice"], "<", 
    SubscriptBox["n", "Bob"]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    SubscriptBox["c", "Alice"], 
    SubscriptBox["\[Congruent]", 
     SubscriptBox["n", "Bob"]], 
    SubsuperscriptBox["m", "Alice", 
     SubscriptBox["e", "Bob"]]}], TraditionalForm]}],ExpressionUUID->
  "e56f045b-9ced-43f7-b4f2-26fe2074b0f6"]
}], "Text",
 CellChangeTimes->{{3.809944309603228*^9, 3.809944310404779*^9}, {
  3.809944432477107*^9, 3.809944463374872*^9}, {3.80994450304325*^9, 
  3.8099445278513613`*^9}, {3.809944715635725*^9, 3.8099447207308598`*^9}, {
  3.8099448705457907`*^9, 3.809944873686722*^9}, {3.8099452063992233`*^9, 
  3.8099452486481752`*^9}},ExpressionUUID->"3b2fa2ed-fd1e-4e22-b2ee-\
ff9af5e891b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "encrypts", " ", "m", " ", "with", " ", "receivers", " ", "public", " ", 
     "key", " ", "values", " ", "e", " ", "and", " ", "n"}], ",", " ", 
    RowBox[{"return", " ", "c"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"singleEncrypt", "[", 
    RowBox[{"m_", ",", " ", "eRec_", ",", "nRec_"}], "]"}], ":=", 
   RowBox[{"PowerMod", "[", 
    RowBox[{"m", ",", " ", "eRec", ",", " ", "nRec"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8099445495766077`*^9, 3.809944561852275*^9}, {
  3.809944729254785*^9, 3.809944764491197*^9}, {3.809945254349839*^9, 
  3.8099452582168903`*^9}},
 CellLabel->
  "In[285]:=",ExpressionUUID->"2e1a39c1-d04f-45b9-af6a-c8211c30eff6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Decryption helper functions", "Subsubsection",
 CellChangeTimes->{{3.809945303737523*^9, 
  3.809945339514942*^9}},ExpressionUUID->"d05e3077-bc4d-48d5-8a88-\
1969443e0d8e"],

Cell[TextData[{
 "Create a decryption function that follows the specification for decryption \
: \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "Alice"], 
    SubscriptBox["\[Congruent]", 
     SubscriptBox["n", "Bob"]], 
    SubsuperscriptBox["c", "Alice", 
     SubscriptBox["d", "Bob"]]}], TraditionalForm]],ExpressionUUID->
  "031af274-e05d-4125-8caf-436686eaa8dd"]
}], "Text",
 CellChangeTimes->{{3.809945407142931*^9, 
  3.809945473536347*^9}},ExpressionUUID->"4ab4c8fd-5b99-489f-abee-\
570f47440664"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "decrypts", " ", "c", " ", "with", " ", "receivers", " ", "key", " ", 
     "values", " ", "d", " ", "and", " ", "n"}], ",", " ", 
    RowBox[{"return", " ", "m"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"singleDecrypt", "[", 
    RowBox[{"c_", ",", " ", "dRec_", ",", " ", "nRec_"}], "]"}], ":=", 
   RowBox[{"PowerMod", "[", 
    RowBox[{"c", ",", " ", "dRec", ",", " ", "nRec"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.809945340740027*^9, 3.8099453412441893`*^9}, 
   3.809945405762352*^9, {3.8099454794533043`*^9, 3.8099455162464743`*^9}, {
   3.8099455581862507`*^9, 3.809945560602015*^9}},
 CellLabel->
  "In[286]:=",ExpressionUUID->"846c677c-29ae-47e9-b83d-abf5799eb665"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"decrypts", " ", "a", " ", "list", " ", "of", " ", "c"}], ",", 
    " ", 
    RowBox[{"return", " ", "a", " ", "list", " ", "of", " ", "m"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"singleDecryptAll", "[", 
     RowBox[{"cSenList_", ",", " ", "nRec_", ",", "dRec_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"singleDecrypt", "[", 
        RowBox[{"#", ",", " ", "dRec", ",", " ", "nRec"}], "]"}], "&"}], ",", 
      " ", "cSenList"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.809945528858638*^9, 3.8099455726349916`*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"ee1f1f62-ef30-4632-a78e-249fa2a640e0"],

Cell["Decoding the m values", "Text",
 CellChangeTimes->{{3.80994715782486*^9, 
  3.809947184059207*^9}},ExpressionUUID->"478b5af7-43b9-4257-be55-\
54c0db398e75"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "decode", " ", "the", " ", "message", " ", "number", " ", "into", " ", "a",
     " ", "string"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mToMessage", "[", 
     RowBox[{"m_", ",", " ", "base_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q", ",", " ", "ascii"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"q", " ", "=", " ", "m"}], ";", "\[IndentingNewLine]", 
       RowBox[{"ascii", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"q", "\[NotEqual]", " ", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"ascii", ",", " ", 
            RowBox[{"Mod", "[", 
             RowBox[{"q", ",", "base"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"q", "=", 
           RowBox[{"Quotient", "[", 
            RowBox[{"q", ",", "base"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"FromCharacterCode", "[", "ascii", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "decode", " ", "a", " ", "list", " ", "of", " ", "message", " ", 
     "numbers", " ", "into", " ", "a", " ", "string"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"allMToMessage", "[", 
     RowBox[{"numList_", ",", " ", "base_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"StringJoin", "[", " ", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"mToMessage", "[", 
         RowBox[{"#", ",", " ", "base"}], "]"}], "&"}], ",", " ", "numList"}],
       "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.809947216401394*^9, 3.809947259754665*^9}, {
  3.809947517138397*^9, 3.809947559009425*^9}},
 CellLabel->
  "In[288]:=",ExpressionUUID->"be4f2348-b861-4a99-a84f-5a1990c34176"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cracking helper functions", "Subsubsection",
 CellChangeTimes->{{3.809945350140088*^9, 
  3.809945356680805*^9}},ExpressionUUID->"0e8e9263-c17b-4cb0-b878-\
7b282ac20ee2"],

Cell[TextData[{
 "To decrypt a message encrypted with RSA it is necessary to know the private \
key value d, and the public key value n. The d value can be calculated \n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"p", " ", "q"}]}], ",", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"p", " ", ",", " ", "q"}], ")"}], " ", "\[Element]", " ", 
      "\[DoubleStruckCapitalP]"}], ",", " ", 
     RowBox[{
     "\[DoubleStruckCapitalP]", " ", "is", " ", "the", " ", "set", " ", "of", 
      " ", "all", " ", "prime", " ", "numbers"}]}], " "}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"\[Phi]", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"p", "-", "1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"q", "-", "1"}], ")"}]}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"d", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["e", 
      RowBox[{"-", "1"}]], " ", "mod", " ", "\[Phi]"}]}], TraditionalForm]}],
  ExpressionUUID->"bd1346e4-df07-412c-a7b2-ce14f14c0923"]
}], "Text",
 CellChangeTimes->{{3.8099455895786657`*^9, 
  3.809945765600202*^9}},ExpressionUUID->"36aabeb3-4637-40e6-9cb8-\
0aee42023214"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"returns", " ", 
    RowBox[{"{", 
     RowBox[{"p", ",", "q"}], "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"genPQ", "[", "n_", "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"FactorInteger", "[", "n", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"takes", " ", 
      RowBox[{"{", 
       RowBox[{"p", ",", " ", "q"}], "}"}]}], ",", " ", 
     RowBox[{"returns", " ", "\[Phi]"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gen\[Phi]", "[", 
     RowBox[{"{", 
      RowBox[{"p_", ",", " ", "q_"}], "}"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"p", " ", "-", "1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"q", "-", "1"}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"calculates", " ", "d", " ", "value"}], ",", " ", 
     RowBox[{"takes", " ", "e", " ", "and", " ", "\[Phi]", " ", "values"}], 
     ",", " ", 
     RowBox[{"returns", " ", "d"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genD", "[", 
     RowBox[{"E_", ",", " ", "\[Phi]_"}], "]"}], ":=", " ", 
    RowBox[{"PowerMod", "[", 
     RowBox[{"E", ",", " ", 
      RowBox[{"-", "1"}], ",", "\[Phi]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"cracks", " ", "d"}], ",", " ", 
     RowBox[{
     "takes", " ", "the", " ", "public", " ", "key", " ", "values", " ", "n", 
      " ", "and", " ", "e"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"crackD", "[", 
     RowBox[{"n_", ",", "e_"}], "]"}], ":=", 
    RowBox[{"genD", "[", 
     RowBox[{"e", ",", " ", 
      RowBox[{"gen\[Phi]", "[", 
       RowBox[{"genPQ", "[", "n", "]"}], "]"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.80994577131124*^9, 3.809946121741542*^9}, 
   3.809947459578065*^9, {3.8099493696151648`*^9, 3.809949371907799*^9}},
 CellLabel->
  "In[294]:=",ExpressionUUID->"740c332b-559c-43ea-be6a-55788db11b0e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Automatic generation of RSA key values functions", "Subsubsection",
 CellChangeTimes->{{3.809945350140088*^9, 3.809945356680805*^9}, {
  3.809946222372253*^9, 
  3.809946248340891*^9}},ExpressionUUID->"03efbd96-1731-4525-bf52-\
9b29425c514f"],

Cell["\<\
In order to perform tests it is necessary to be able to generate RSA key \
values automatically, dependant on the wanted bit length of the n value.\
\>", "Text",
 CellChangeTimes->{{3.80994626888704*^9, 3.80994627063725*^9}, {
  3.809946547406625*^9, 
  3.80994659393204*^9}},ExpressionUUID->"6aee2245-7ed6-49f9-916f-\
1fded9da934e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"generates", " ", "random", " ", "p", " ", "and", " ", "q"}], ",",
     " ", 
    RowBox[{
    "p", "*", "q", " ", "has", " ", "a", " ", "high", " ", "chance", " ", 
     "to", " ", "be", " ", "of", " ", "the", " ", "decided", " ", "bit", " ", 
     "length"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
    "it", " ", "may", " ", "be", " ", "necessary", " ", "to", " ", "run", " ",
      "several", " ", "times", " ", "in", " ", "order", " ", "to", " ", 
     "receive", " ", "\[IndentingNewLine]", "the", " ", "wanted", " ", 
     "output"}], ",", "\[IndentingNewLine]", 
    RowBox[{"returns", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", "q"}], "}"}], ",", " ", 
       RowBox[{"BitLength", "[", 
        RowBox[{"p", "*", "q"}], "]"}]}], "}"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"randomPandQ", "[", "bitLenOfProduct_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "p", ",", " ", "q", ",", " ", "min", ",", " ", "max", ",", "bitLenP", 
        ",", " ", "bitLenQ", ",", " ", "xorNum"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"min", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"bitLenOfProduct", "/", "2"}], " ", "-", "1"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"max", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"bitLenOfProduct", "/", "2"}], " ", "+", "1"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"p", "=", " ", 
        RowBox[{"NextPrime", "[", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["2", "min"], ",", " ", 
            SuperscriptBox["2", "max"]}], "}"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bitLenP", " ", "=", " ", 
        RowBox[{"BitLength", "[", "p", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"bitLenQ", " ", "=", 
        RowBox[{"bitLenOfProduct", "-", "bitLenP"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"xorNum", " ", "=", " ", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["2", 
            RowBox[{"bitLenQ", "-", "5"}]], ",", " ", 
           SuperscriptBox["2", 
            RowBox[{"bitLenQ", "-", "1"}]]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"q", "=", 
        RowBox[{"NextPrime", "[", 
         RowBox[{"BitXor", "[", 
          RowBox[{
           SuperscriptBox["2", "bitLenQ"], ",", "xorNum"}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"p", ",", " ", "q"}], "}"}], ",", " ", 
         RowBox[{"BitLength", "[", 
          RowBox[{"p", "*", "q"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"generates", " ", "random", " ", "RSA", " ", "numbers"}], ",", 
     " ", 
     RowBox[{
     "n", " ", "has", " ", "the", " ", "bit", " ", "length", " ", "of", " ", 
      "bitLenOfN"}], ",", "\[IndentingNewLine]", 
     RowBox[{"returns", " ", 
      RowBox[{"{", 
       RowBox[{
       "p", ",", " ", "q", ",", " ", "n", ",", " ", "\[Phi]", ",", " ", "e", 
        ",", " ", "d"}], "}"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"randomRSAnums", "[", "bitLenOfN_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "p", ",", "q", ",", " ", "bLen", ",", " ", "n", ",", "rnd", ",", 
        "\[Phi]", ",", "e", ",", "d"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p", ",", "q"}], "}"}], ",", "bLen"}], "}"}], "=", 
        RowBox[{"randomPandQ", "[", "bitLenOfN", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"bLen", "\[NotEqual]", "bitLenOfN"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"p", ",", "q"}], "}"}], ",", "bLen"}], "}"}], "=", 
           RowBox[{"randomPandQ", "[", "bitLenOfN", "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"n", "=", 
        RowBox[{"p", "*", "q"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Phi]", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"p", "-", "1"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"q", "-", "1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rnd", ":=", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["10", "3"], ",", 
           SuperscriptBox["10", "4"]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"GCD", "[", 
          RowBox[{
           RowBox[{"e", "=", "rnd"}], ",", "\[Phi]"}], "]"}], "\[NotEqual]", 
         " ", "1"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"d", "=", 
        RowBox[{"PowerMod", "[", 
         RowBox[{"e", ",", " ", 
          RowBox[{"-", "1"}], ",", " ", "\[Phi]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"p", ",", "q", ",", "n", ",", "\[Phi]", ",", "e", ",", "d"}], 
        "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.809946276865796*^9, 3.809946402861808*^9}, {
  3.8099465043853292`*^9, 3.8099465338950872`*^9}, {3.809946604862897*^9, 
  3.8099466959524918`*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"b5f272a4-c0eb-4727-9309-eaf12d23d81a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Encryption functions", "Subsubsection",
 CellChangeTimes->{{3.809946827688572*^9, 
  3.8099468340700283`*^9}},ExpressionUUID->"88c43ae0-d0e8-48e5-8f3d-\
fb46f1dea73d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "encrypts", " ", "a", " ", "string", " ", "message", " ", "with", " ", 
     "the", " ", "receivers", " ", "values", " ", "e", " ", "and", " ", "n"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"returns", " ", "a", " ", "list", " ", "of", " ", "ciphers"}], 
    ",", " ", "c"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"singleEncryptFromString", "[", 
    RowBox[{"message_", ",", " ", "eRec_", ",", "nRec_", " ", ",", "base_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "j", ",", "k", ",", "messLen", ",", "ptMessage", ",", "encryptedList", 
       " ", ",", " ", "cond", ",", "m"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"encryptedList", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cond", " ", "=", " ", "True"}], ";", "\[IndentingNewLine]", 
      RowBox[{"j", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"k", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"messLen", " ", "=", " ", 
       RowBox[{"StringLength", "[", "message", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"j", " ", "\[LessEqual]", " ", "messLen"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"While", "[", " ", 
          RowBox[{"cond", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ptMessage", " ", "=", " ", 
             RowBox[{"StringJoin", "[", 
              RowBox[{"StringPart", "[", 
               RowBox[{"message", ",", " ", 
                RowBox[{"j", ";;", "k", ";;", "1"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"m", "=", 
             RowBox[{"messageToM", "[", 
              RowBox[{"ptMessage", ",", "base"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"m", " ", "\[GreaterEqual]", " ", "nRec"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"k", "--"}], ";", "\[IndentingNewLine]", 
               RowBox[{"cond", "=", "False"}], ";", "\[IndentingNewLine]", 
               RowBox[{"ptMessage", "=", 
                RowBox[{"StringJoin", "[", 
                 RowBox[{"StringPart", "[", 
                  RowBox[{"message", ",", " ", 
                   RowBox[{"j", ";;", "k", ";;", "1"}]}], "]"}], "]"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"m", " ", "=", " ", 
                RowBox[{"messageToM", "[", 
                 RowBox[{"ptMessage", ",", "base"}], "]"}]}], ";"}], 
              "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", " ", 
                RowBox[{
                 RowBox[{"k", " ", "\[GreaterEqual]", " ", "messLen"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"cond", "=", "False"}], ";"}], " ", 
                 "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"k", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"encryptedList", ",", 
           RowBox[{"singleEncrypt", "[", 
            RowBox[{"m", ",", " ", "eRec", ",", "nRec"}], "]"}]}], "]"}], ";",
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"k", " ", "\[LessEqual]", " ", "messLen"}], " ", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"cond", "=", "True"}], ";", "\[IndentingNewLine]", 
            RowBox[{"j", " ", "=", " ", 
             RowBox[{"k", "+", "1"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"k", "=", "j"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "encryptedList"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.809946836289193*^9, 3.809946930182415*^9}},
 CellLabel->
  "In[300]:=",ExpressionUUID->"38013ea5-e4ac-4c09-bbb1-b58a88b0a4c7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Decryption functions", "Subsubsection",
 CellChangeTimes->{{3.809947114889607*^9, 
  3.809947120985289*^9}},ExpressionUUID->"0963da78-a002-4137-aa52-\
eb314e6c2e56"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "decrypts", " ", "list", " ", "of", " ", "ciphers", " ", "with", " ", 
     "receivers", " ", "n", " ", "and", " ", "d", " ", "values"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"returns", " ", "a", " ", "string", " ", "of", " ", "message"}]}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"singleDecryptToString", "[", 
    RowBox[{
    "cipherList_", ",", " ", "nRec_", ",", "dRec_", ",", " ", "base_"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"allMToMessage", "[", 
    RowBox[{
     RowBox[{"singleDecryptAll", "[", 
      RowBox[{"cipherList", ",", " ", "nRec", ",", "dRec"}], "]"}], ",", 
     "base"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.809947123079958*^9, 3.809947123239065*^9}, 
   3.809947639382575*^9, {3.809947673966506*^9, 3.809947728948676*^9}},
 CellLabel->
  "In[301]:=",ExpressionUUID->"3da94f47-5d97-4b62-a2e6-84f58dab6c69"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cracking function", "Subsubsection",
 CellChangeTimes->{{3.809947114889607*^9, 3.809947120985289*^9}, {
  3.809947855363854*^9, 
  3.8099478592995453`*^9}},ExpressionUUID->"0797a90c-9561-4815-901f-\
83c7d2b5a3fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "cracks", " ", "a", " ", "cipher", " ", "list", " ", "and", " ", 
     "returns", " ", "the", " ", "message"}], ",", "\[IndentingNewLine]", " ", 
    RowBox[{"arguments", ":", " ", "\[IndentingNewLine]", 
     RowBox[{"cipher", " ", "list"}]}], ",", " ", "\[IndentingNewLine]", " ", 
    RowBox[{"public", " ", "n", " ", "value"}], ",", " ", 
    "\[IndentingNewLine]", " ", 
    RowBox[{"public", " ", "e", " ", "value"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"RSAcrack", "[", 
    RowBox[{"cipherList_", ",", "n_", ",", "e_"}], "]"}], ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"singleDecryptToString", "[", 
    RowBox[{"cipherList", ",", " ", "n", ",", " ", 
     RowBox[{"crackD", "[", 
      RowBox[{"n", ",", "e"}], "]"}], ",", " ", "256"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.809947734209231*^9, 3.80994784214152*^9}, {
  3.8099501866812153`*^9, 3.8099501882936687`*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"f1968a9a-3aed-402b-a512-50e75c9d46a3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Timing function", "Subsubsection",
 CellChangeTimes->{{3.809947877042664*^9, 
  3.8099478854598637`*^9}},ExpressionUUID->"2b8331a7-1483-412d-a8cd-\
ab8560444f7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "takes", " ", "the", " ", "time", " ", "to", " ", "crack", " ", "a", " ", 
     "given", " ", "message", " ", "encrypted", " ", "with", " ", "an", " ", 
     "RSA", " ", "key", "\[IndentingNewLine]", "  ", "with", " ", "different",
      " ", "bit", " ", "length", " ", "of", " ", 
     RowBox[{
     "n", ".", "\[IndentingNewLine]", "  ", "\[IndentingNewLine]", " ", 
      "automatically"}], " ", "creates", " ", "RSA", " ", "keys", " ", "for", 
     " ", "sender", " ", "and", " ", "receiver"}], ",", "\[IndentingNewLine]",
     "   ", 
    RowBox[{"automatically", " ", "encrypts", " ", "a", " ", "message"}], ",",
     "\[IndentingNewLine]", "   ", 
    RowBox[{
    "automatically", " ", "cracks", " ", "the", " ", "encryption", " ", 
     RowBox[{"(", 
      RowBox[{"and", " ", "decrypts", " ", "the", " ", "message"}], ")"}]}], 
    ",", "\[IndentingNewLine]", "   ", 
    RowBox[{
    "automatically", " ", "takes", " ", "the", " ", "time", " ", "for", " ", 
     "cracking", " ", "the", " ", "encryption"}], ",", "\[IndentingNewLine]", 
    "   ", 
    RowBox[{"returns", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"list", " ", "of", " ", "bit", " ", "lenghts", " ", "tested"}],
        ",", " ", 
       RowBox[{"times", " ", "to", " ", "crack", " ", "encryption"}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "    ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"RSAcrackTiming", "[", 
    RowBox[{
    "message_", ",", " ", "minBitLength_", ",", " ", "maxBitLength_", ",", 
     " ", "increment_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "base", ",", " ", "bitLenList", ",", " ", "timesList", ",", " ", 
       "bitLen", ",", " ", "pSen", ",", "qSen", ",", "nSen", ",", "\[Phi]Sen",
        ",", "eSen", ",", " ", "dSen", ",", "pRec", ",", "qRec", ",", "nRec", 
       ",", "\[Phi]Rec", ",", "eRec", ",", " ", "dRec", ",", " ", "c", " ", 
       ",", " ", "crackedMessage"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"base", " ", "=", "256"}], ";", "\[IndentingNewLine]", 
      RowBox[{"bitLenList", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"timesList", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"bitLen", " ", "=", " ", "minBitLength"}], ",", " ", 
        RowBox[{"bitLen", "\[LessEqual]", " ", "maxBitLength"}], ",", " ", 
        RowBox[{"bitLen", " ", "+=", " ", "increment"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "pSen", ",", "qSen", ",", "nSen", ",", "\[Phi]Sen", ",", "eSen", 
            ",", " ", "dSen"}], "}"}], "=", 
          RowBox[{"randomRSAnums", "[", "bitLen", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "pRec", ",", "qRec", ",", "nRec", ",", "\[Phi]Rec", ",", "eRec", 
            ",", " ", "dRec"}], "}"}], "=", 
          RowBox[{"randomRSAnums", "[", "bitLen", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"c", " ", "=", " ", 
          RowBox[{"singleEncryptFromString", "[", 
           RowBox[{
           "message", ",", " ", "eRec", ",", "nRec", " ", ",", "base"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"bitLenList", ",", " ", "bitLen"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"timesList", ",", " ", 
           RowBox[{
            RowBox[{"AbsoluteTiming", "[", 
             RowBox[{"crackedMessage", " ", "=", " ", 
              RowBox[{"RSAcrack", "[", 
               RowBox[{"c", ",", " ", "nRec", ",", " ", "eRec"}], "]"}]}], 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Decrypted key with bit length: \>\"", ",", " ", "bitLen"}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Decrypted message: \>\"", ",", " ", "crackedMessage"}],
           "]"}], ";"}], " ", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"bitLenList", ",", " ", "timesList"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.809947887157887*^9, 3.809948057541572*^9}, {
  3.809948124319772*^9, 3.809948318557674*^9}, {3.809948409708952*^9, 
  3.809948532900107*^9}, {3.809949494470793*^9, 3.809949542250654*^9}},
 CellLabel->
  "In[328]:=",ExpressionUUID->"52b84c58-e9d8-496d-a230-66c4454a68d3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Taking the times", "Subsubsection",
 CellChangeTimes->{{3.809948934562381*^9, 
  3.809948954336617*^9}},ExpressionUUID->"15caaaf2-5b90-4747-bd47-\
4b3f67fab0da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Example", " ", "code"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"timeDataSmall", " ", "=", " ", 
     RowBox[{"RSAcrackTiming", "[", 
      RowBox[{"message", ",", " ", "100", ",", " ", "140", ",", " ", "5"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataSmall", " ", "=", " ", 
     RowBox[{"Transpose", "[", "timeDataSmall", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"dataSmall", ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Time to crack different length RSA keys\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<RSA key length (bits)\>\"", ",", "\"\<Time (s)\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.8099489574310827`*^9, {3.809949152961361*^9, 3.809949184395403*^9}, {
   3.80994956934027*^9, 3.809949583505639*^9}, {3.809949698081609*^9, 
   3.80994972499792*^9}, {3.8099501023450317`*^9, 3.8099501539935417`*^9}, {
   3.809950200818874*^9, 3.809950200909789*^9}, {3.809950357916265*^9, 
   3.8099503596153507`*^9}, {3.809968790036515*^9, 
   3.809968801231378*^9}},ExpressionUUID->"77a5851c-d32d-4391-b76f-\
2b72d73e14ab"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Decrypted key with bit length: \"\>", "\[InvisibleSpace]", 
   "100"}],
  SequenceForm["Decrypted key with bit length: ", 100],
  Editable->False]], "Print",
 CellChangeTimes->{{3.809949715122307*^9, 3.809949726014805*^9}, {
   3.809950110118664*^9, 3.809950154399979*^9}, 3.809950202260957*^9, 
   3.8099503624161863`*^9},
 CellLabel->
  "During evaluation of \
In[332]:=",ExpressionUUID->"9e7b8be3-68bd-401f-b6f2-1b07d31ce6b7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Decrypted key with bit length: \"\>", "\[InvisibleSpace]", 
   "105"}],
  SequenceForm["Decrypted key with bit length: ", 105],
  Editable->False]], "Print",
 CellChangeTimes->{{3.809949715122307*^9, 3.809949726014805*^9}, {
   3.809950110118664*^9, 3.809950154399979*^9}, 3.809950202260957*^9, 
   3.809950362448132*^9},
 CellLabel->
  "During evaluation of \
In[332]:=",ExpressionUUID->"b5e5de1d-ebc2-4486-a2ee-d19f8ed7f116"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Decrypted key with bit length: \"\>", "\[InvisibleSpace]", 
   "110"}],
  SequenceForm["Decrypted key with bit length: ", 110],
  Editable->False]], "Print",
 CellChangeTimes->{{3.809949715122307*^9, 3.809949726014805*^9}, {
   3.809950110118664*^9, 3.809950154399979*^9}, 3.809950202260957*^9, 
   3.8099503625328074`*^9},
 CellLabel->
  "During evaluation of \
In[332]:=",ExpressionUUID->"10b61256-13bf-4665-94ce-69fd5efddc07"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Decrypted key with bit length: \"\>", "\[InvisibleSpace]", 
   "115"}],
  SequenceForm["Decrypted key with bit length: ", 115],
  Editable->False]], "Print",
 CellChangeTimes->{{3.809949715122307*^9, 3.809949726014805*^9}, {
   3.809950110118664*^9, 3.809950154399979*^9}, 3.809950202260957*^9, 
   3.8099503626434803`*^9},
 CellLabel->
  "During evaluation of \
In[332]:=",ExpressionUUID->"cb1bc6e3-fc0c-4119-a439-78027917289a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Decrypted key with bit length: \"\>", "\[InvisibleSpace]", 
   "120"}],
  SequenceForm["Decrypted key with bit length: ", 120],
  Editable->False]], "Print",
 CellChangeTimes->{{3.809949715122307*^9, 3.809949726014805*^9}, {
   3.809950110118664*^9, 3.809950154399979*^9}, 3.809950202260957*^9, 
   3.809950362787072*^9},
 CellLabel->
  "During evaluation of \
In[332]:=",ExpressionUUID->"0ae67a8d-f34b-4ee5-bb11-0859e497c665"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Decrypted key with bit length: \"\>", "\[InvisibleSpace]", 
   "125"}],
  SequenceForm["Decrypted key with bit length: ", 125],
  Editable->False]], "Print",
 CellChangeTimes->{{3.809949715122307*^9, 3.809949726014805*^9}, {
   3.809950110118664*^9, 3.809950154399979*^9}, 3.809950202260957*^9, 
   3.8099503629473133`*^9},
 CellLabel->
  "During evaluation of \
In[332]:=",ExpressionUUID->"3ef2dd82-f538-4bc7-98fe-6e4fd520ea88"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Decrypted key with bit length: \"\>", "\[InvisibleSpace]", 
   "130"}],
  SequenceForm["Decrypted key with bit length: ", 130],
  Editable->False]], "Print",
 CellChangeTimes->{{3.809949715122307*^9, 3.809949726014805*^9}, {
   3.809950110118664*^9, 3.809950154399979*^9}, 3.809950202260957*^9, 
   3.809950363198962*^9},
 CellLabel->
  "During evaluation of \
In[332]:=",ExpressionUUID->"b429efea-67b2-49d9-acd0-6671d97eb1a1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Decrypted key with bit length: \"\>", "\[InvisibleSpace]", 
   "135"}],
  SequenceForm["Decrypted key with bit length: ", 135],
  Editable->False]], "Print",
 CellChangeTimes->{{3.809949715122307*^9, 3.809949726014805*^9}, {
   3.809950110118664*^9, 3.809950154399979*^9}, 3.809950202260957*^9, 
   3.8099503635524883`*^9},
 CellLabel->
  "During evaluation of \
In[332]:=",ExpressionUUID->"6e08b2f5-5538-4cc7-96ff-496af8fba28a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Decrypted key with bit length: \"\>", "\[InvisibleSpace]", 
   "140"}],
  SequenceForm["Decrypted key with bit length: ", 140],
  Editable->False]], "Print",
 CellChangeTimes->{{3.809949715122307*^9, 3.809949726014805*^9}, {
   3.809950110118664*^9, 3.809950154399979*^9}, 3.809950202260957*^9, 
   3.809950363891779*^9},
 CellLabel->
  "During evaluation of \
In[332]:=",ExpressionUUID->"a7ca1159-0dde-494c-aba7-3f6060981aee"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{100., 0.081508}, {105., 0.011747}, {110., 0.060952}, {115., 
      0.079521}, {120., 0.117975}, {125., 0.139484}, {130., 0.229548}, {135., 
      0.303909}, {140., 0.327821}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"RSA key length (bits)\"", TraditionalForm], 
    FormBox["\"Time (s)\"", TraditionalForm]},
  AxesOrigin->{99.16666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Time to crack different length RSA keys\"", TraditionalForm],
  PlotRange->{{99.16666666666667, 140.}, {0, 0.327821}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.809950110377239*^9, 3.809950154914527*^9}, 
   3.809950203070632*^9, 3.809950363933443*^9},
 CellLabel->
  "Out[334]=",ExpressionUUID->"d0e7bd29-aa4b-4a57-8b7a-a689049d36b0"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.80995008237078*^9, 
  3.809950100185117*^9}},ExpressionUUID->"6b6652be-c7fc-4cb4-a4f6-\
88c808f20b21"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"100", ",", "0.051393`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"105", ",", "0.052793`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"110", ",", "0.077445`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"115", ",", "0.07904`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"120", ",", "0.107998`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"125", ",", "0.135188`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"130", ",", "0.264322`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"135", ",", "0.290357`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"140", ",", "0.422595`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"145", ",", "0.464552`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"150", ",", "0.988578`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"155", ",", "1.713563`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"160", ",", "3.72046`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"165", ",", "4.769045`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"170", ",", "6.235202`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"175", ",", "8.115938`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"180", ",", "13.510855`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"185", ",", "16.892628`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"190", ",", "33.129527`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"195", ",", "34.235115`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"200", ",", "110.100646`"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Time to crack different length RSA keys\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<RSA key length (bits)\>\"", ",", "\"\<Time (s)\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.80994911278124*^9, 3.8099491134795218`*^9}, {
  3.809949189518487*^9, 3.8099492148645887`*^9}},
 CellLabel->
  "In[280]:=",ExpressionUUID->"7de506fd-413e-4c1d-9070-692b2437e46e"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQGRDrVTa97oBayyB3MdohyCo18prGdfDeE3RDsc
lLGty7+8GcI/EOPgkCWs/t16C4TPEOeQ28tx7ODS3VD98Q6iT9KVr/sehPIT
HBod0i8te3UBwn+Q4PCn81Sb6dRLUPMTHV7/l3l2mvs2hK+Q5KC97JK/xe67
UPuSHGIKC0PyFr2H8BOSHeZqe3EezPoNtT/F4dfsgI6Gw7wOYO4CKF9YGMJ3
SHVYf4H99I0PEhD+g1QHg117LGOsFSD8hjQHlv/RJ/tYtSF8hXSH/LrDLs1P
DCD8A+kOlZVW4VMmOED4CRkO7s8m2kvIOUL4DJkOnvNe/y5oi3YAAEvvZjw=

      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"RSA key length (bits)\"", TraditionalForm], 
    FormBox["\"Time (s)\"", TraditionalForm]},
  AxesOrigin->{97.91666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{483.3333333333338, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Time to crack different length RSA keys\"", TraditionalForm],
  PlotRange->{{97.91666666666667, 200.}, {0, 110.100646}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.809949223500189*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"201f5350-1abd-4685-bbc8-776e7e0ad980"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Determining an appropriate model", "Subsubsection",
 CellChangeTimes->{{3.8099377723673506`*^9, 3.80993777902452*^9}, {
  3.80994720889738*^9, 3.8099472135805073`*^9}, {3.809956489883636*^9, 
  3.8099564900545588`*^9}, {3.809968746464758*^9, 
  3.809968773887212*^9}},ExpressionUUID->"a52f88bf-c9c6-47f3-928a-\
078db26834b0"],

Cell["\<\
The dataset below contains the calculations of the time to crack a cipher of \
different bit sizes of n. The left value is The bit size, and the right value \
is the time to crack the cipher.\
\>", "Text",
 CellChangeTimes->{{3.8099422236891775`*^9, 3.8099422346141343`*^9}, {
  3.809942288605782*^9, 3.8099423091151695`*^9}, {3.809947193486725*^9, 
  3.8099471947487173`*^9}, {3.8099475470865784`*^9, 
  3.8099476368232613`*^9}},ExpressionUUID->"0734f93b-761a-4674-9e43-\
eb16d4d3d552"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"100", ",", "0.051393`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"105", ",", "0.052793`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"110", ",", "0.077445`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"115", ",", "0.07904`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"120", ",", "0.107998`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"125", ",", "0.135188`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"130", ",", "0.264322`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"135", ",", "0.290357`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"140", ",", "0.422595`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"145", ",", "0.464552`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"150", ",", "0.988578`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"155", ",", "1.713563`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"160", ",", "3.72046`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"165", ",", "4.769045`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"170", ",", "6.235202`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"175", ",", "8.115938`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"180", ",", "13.510855`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"185", ",", "16.892628`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"190", ",", "33.129527`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"195", ",", "34.235115`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"200", ",", "110.100646`"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8099377813985105`*^9, 3.809937781443102*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"1ef3a7c9-907f-4012-a1fe-8b1243925738"],

Cell["\<\
Let\[CloseCurlyQuote]s split the data so it is easier to work with.
The bit sizes of n:\
\>", "Text",
 CellChangeTimes->{{3.809942315463809*^9, 3.8099423225133257`*^9}, {
  3.80994764279185*^9, 
  3.809947673812066*^9}},ExpressionUUID->"239392bd-f891-4885-a67a-\
8378f6c0fdb4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[DoubleStruckX]", "=", 
  RowBox[{"data", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8099399036714797`*^9, 3.809939913485937*^9}, 
   3.809940614962143*^9},
 CellLabel->
  "In[123]:=",ExpressionUUID->"f59428df-eca7-45c6-9c13-9baa5330e726"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "100", ",", "105", ",", "110", ",", "115", ",", "120", ",", "125", ",", 
   "130", ",", "135", ",", "140", ",", "145", ",", "150", ",", "155", ",", 
   "160", ",", "165", ",", "170", ",", "175", ",", "180", ",", "185", ",", 
   "190", ",", "195", ",", "200"}], "}"}]], "Output",
 CellChangeTimes->{3.8099399144015245`*^9, 3.809940616617089*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"7087cb8d-7b28-4eab-bf63-48c6330f9b2e"]
}, Open  ]],

Cell["The times to crack the cipher:", "Text",
 CellChangeTimes->{{3.809942328672015*^9, 3.809942349567495*^9}, {
  3.8099476822436647`*^9, 
  3.8099476999068985`*^9}},ExpressionUUID->"20328b4b-f208-45be-b0c5-\
a9739ad45a98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[DoubleStruckY]", "=", 
  RowBox[{"data", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8099399187034817`*^9, 3.809939926267947*^9}, 
   3.809940625015914*^9},
 CellLabel->
  "In[124]:=",ExpressionUUID->"a68f32ba-1292-4f76-a650-5e077391ef1f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.051393`", ",", "0.052793`", ",", "0.077445`", ",", "0.07904`", ",", 
   "0.107998`", ",", "0.135188`", ",", "0.264322`", ",", "0.290357`", ",", 
   "0.422595`", ",", "0.464552`", ",", "0.988578`", ",", "1.713563`", ",", 
   "3.72046`", ",", "4.769045`", ",", "6.235202`", ",", "8.115938`", ",", 
   "13.510855`", ",", "16.892628`", ",", "33.129527`", ",", "34.235115`", ",",
    "110.100646`"}], "}"}]], "Output",
 CellChangeTimes->{3.809939926751345*^9, 3.809940178260567*^9, 
  3.8099406261259604`*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"7b701d1f-b919-41bd-bbe0-fcbfeaac326d"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s plot the data so we see what \
we\[CloseCurlyQuote]re working with.", "Text",
 CellChangeTimes->{{3.809942730595397*^9, 3.8099427456539445`*^9}, {
  3.8099477066719413`*^9, 
  3.8099477235179973`*^9}},ExpressionUUID->"771e3d46-a999-4ee9-9a9a-\
4ee6b91a7457"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataplot", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"data", ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Time to crack RSA key\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<RSA public modulus key size (bits)\>\"", ",", "\"\<Time (s)\>\""}],
       "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8099386413154383`*^9, 3.8099386840650063`*^9}, {
  3.8099409037105913`*^9, 3.8099409074685965`*^9}, {3.8099423606092486`*^9, 
  3.8099423893278627`*^9}, {3.80994256612908*^9, 3.8099425690643744`*^9}, {
  3.8099427512423763`*^9, 3.809942819322919*^9}, {3.8099428624729147`*^9, 
  3.8099429694500074`*^9}, {3.809943442152526*^9, 3.80994346878819*^9}, {
  3.8099436796348867`*^9, 3.8099436828373733`*^9}, {3.809946729714654*^9, 
  3.809946730549116*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"6b9b6ec5-28cc-420c-90d5-49567fd421ac"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQGRDrVTa97oBayyB3MdohyCo18prGdfDeE3RDsc
lLGty7+8GcI/EOPgkCWs/t16C4TPEOeQ28tx7ODS3VD98Q6iT9KVr/sehPIT
HBod0i8te3UBwn+Q4PCn81Sb6dRLUPMTHV7/l3l2mvs2hK+Q5KC97JK/xe67
UPuSHGIKC0PyFr2H8BOSHeZqe3EezPoNtT/F4dfsgI6Gw7wOYO4CKF9YGMJ3
SHVYf4H99I0PEhD+g1QHg117LGOsFSD8hjQHlv/RJ/tYtSF8hXSH/LrDLs1P
DCD8A+kOlZVW4VMmOED4CRkO7s8m2kvIOUL4DJkOnvNe/y5oi3YAAEvvZjw=

      "]]}, {
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"RSA public modulus key size (bits)\"", TraditionalForm], 
    FormBox["\"Time (s)\"", TraditionalForm]},
  AxesOrigin->{97.91666666666667, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{489.33333333333303`, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Time to crack RSA key\"", TraditionalForm],
  PlotRange->{{97.91666666666667, 200.}, {0, 110.100646}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8099386720434*^9, 3.809938685010393*^9}, {
   3.809939596599156*^9, 3.809939618318287*^9}, 3.809940907753834*^9, {
   3.8099423619292555`*^9, 3.809942389827327*^9}, 3.8099425695342617`*^9, {
   3.8099429533356376`*^9, 3.809942970027748*^9}, {3.8099434424859505`*^9, 
   3.809943469348027*^9}, 3.8099436833256216`*^9, 3.809946738128171*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"5e2366fe-a5f3-4a75-a624-eea106d93fe5"]
}, Open  ]],

Cell[TextData[{
 "From the dataplot, we believe the data to grow exponentially. If it is \
exponential the data should give a straight line in a semi-log plot (lin-log \
plot) in which the x-axis is linear and the y-axis is logarithmic. The scale \
on the y-axis is chosen using the inverse function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["e", "x"], "\[DoubleLeftRightArrow]", 
      RowBox[{"ln", "(", "y", ")"}]}], "=", "x"}]}], TraditionalForm]],
  ExpressionUUID->"6d5692bc-4f01-4c9c-9c4f-1855b35b7221"],
 "."
}], "Text",
 CellChangeTimes->{{3.8099449834056787`*^9, 3.8099449909813204`*^9}, {
  3.8099450242007637`*^9, 3.809945120825142*^9}, {3.8099451885393395`*^9, 
  3.8099452132209597`*^9}, {3.809947730651817*^9, 
  3.8099477377719593`*^9}},ExpressionUUID->"d08aec5f-f266-4b38-94b8-\
12343c969fb3"],

Cell[BoxData[
 FormBox[
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"c", " ", 
      SuperscriptBox["e", 
       RowBox[{"a", " ", "x"}]]}], "\[DoubleLeftRightArrow]", 
     RowBox[{"ln", "(", "y", ")"}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"ln", "(", "c", ")"}], "+", 
       RowBox[{"k", " ", "x"}]}], "\[DoubleLeftRightArrow]", 
      RowBox[{"ln", "(", "y", ")"}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"a", " ", "x"}], "+", "b"}], "\[DoubleLeftRightArrow]", "y"}],
       "=", 
      SuperscriptBox["e", 
       RowBox[{
        RowBox[{"a", " ", "x"}], "+", "b"}]]}]}]}]}], 
  TraditionalForm]], "DisplayFormula",ExpressionUUID->"47b190bc-c83e-4f07-\
b28f-0821f8e7f22e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datalogplot", "=", 
  RowBox[{"ListLogPlot", "[", 
   RowBox[{"data", ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Time to crack RSA key\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<RSA public modulus key size (bits)\>\"", ",", "\"\<Time (s)\>\""}],
       "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.809937789725339*^9, 3.809937818259449*^9}, {
   3.8099378856640096`*^9, 3.809937909864787*^9}, {3.8099395879015274`*^9, 
   3.809939588709731*^9}, {3.8099397922669616`*^9, 3.809939828457638*^9}, {
   3.809942720658608*^9, 3.8099427210261393`*^9}, {3.809942997746289*^9, 
   3.8099430114309607`*^9}, 3.80994343451207*^9, {3.809943661470518*^9, 
   3.8099436679088287`*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"1bc6e99c-9564-4e6f-8e7d-1e3684d1f903"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQGRDvwyadN+72M/AOY6RDkIbjOv+9AO5TdEO1xf
WfhYq5wFwj8Q49C8cPauLF8onyHOoXmrxkbZc4xQ/fEOqlf7HlkxMUD5CQ49
J7ZeFvX6uh/Mf5DgsLlS3df75GcIvyHRwdxamll6wmsIXyHJwSp7p+WKjhcQ
/oEkh+VCS70ftrVD+AnJDvktMe6MNg/tIfanOJTP7jjcwvoVwl+Q4iB2hPNR
z78fEL5DqoOvIItft8dfCP9BqoPreYcrmgcYHCD2pzkYhz2L/XKZBcJXSHdw
WZR0q3AuG4R/IN1B/GfMqXsMPBB+QoaDzJfVfZIuUD5DpoOC1OZyq3NCDgBJ
mGTY
      "]]}, {
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"RSA public modulus key size (bits)\"", TraditionalForm], 
    FormBox["\"Time (s)\"", TraditionalForm]},
  AxesOrigin->{97.91666666666667, -3.5684468007681107`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{456.6666666666665, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Time to crack RSA key\"", TraditionalForm],
  PlotRange->{{97.91666666666667, 200.}, {-3.5684468007681107`, 
   4.7013949111047}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.1\"", 0.1, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}}, {-4.605170185988091, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.912023005428146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.506557897319982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.2188758248682006`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.659260036932778, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.5257286443082556`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.4079456086518722`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.912023005428146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.298317366548036, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.703782474656201, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.991464547107982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.214608098422191, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.396929655216146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.551080335043404, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.684611727667927, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.802394763324311, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.907755278982137, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.003065458786462, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      7.090076835776092, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{
  3.8099379109310894`*^9, 3.8099395893876123`*^9, {3.809939621167324*^9, 
   3.809939632959588*^9}, {3.8099397994867163`*^9, 3.809939831939583*^9}, 
   3.8099407829112515`*^9, 3.809942722359501*^9, {3.8099429991926966`*^9, 
   3.80994301219971*^9}, 3.809943435297304*^9, 3.809943673012844*^9, 
   3.8099478248467703`*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"a5686b8c-2f3f-4d15-bc67-5ad14e9d0283"]
}, Open  ]],

Cell["\<\
Here we see that the data fits pretty good as an exponential function, since \
the data is in a pretty straight line.\
\>", "Text",
 CellChangeTimes->{{3.80994530322974*^9, 3.809945342828865*^9}, {
  3.809947849799303*^9, 
  3.809947862944603*^9}},ExpressionUUID->"f393741b-6dc7-4571-ba62-\
225ba892628a"],

Cell["\<\
If the data fits a straight line in a log(y)-lin(x) plot, then the model is \
an exponential function. We want to fit a model to our data, and to do that \
we need to perform the log operation on the Y values, to be able to fit our \
model to the data in a straight line.\
\>", "Text",
 CellChangeTimes->{{3.8099379208905334`*^9, 3.809937949985447*^9}, {
  3.809941202929305*^9, 3.809941203073277*^9}, {3.8099438106127787`*^9, 
  3.809943840507619*^9}, {3.809945360446103*^9, 3.809945379617009*^9}, {
  3.8099478829952326`*^9, 
  3.809947978576832*^9}},ExpressionUUID->"ac3906bd-d4d6-4ad0-a2c9-\
5ccab563facf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataWithLog", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{"\[DoubleStruckX]", ",", 
     RowBox[{"Log", "[", "\[DoubleStruckY]", "]"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.809937953915859*^9, 3.8099380186977644`*^9}, {
  3.809938206647678*^9, 3.809938223078074*^9}, {3.809940144841669*^9, 
  3.809940153136632*^9}, {3.809940661483795*^9, 3.8099406686238055`*^9}, {
  3.809944026854537*^9, 3.8099440461935525`*^9}, {3.8099482591864815`*^9, 
  3.8099482644635773`*^9}, {3.8099488140715046`*^9, 3.8099488153766155`*^9}},
 CellLabel->
  "In[270]:=",ExpressionUUID->"6b989507-5b47-4d82-ab01-22fe9266b3ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"100", ",", 
     RowBox[{"-", "2.968253302565706`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"105", ",", 
     RowBox[{"-", "2.9413766728164394`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"110", ",", 
     RowBox[{"-", "2.558187271982415`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"115", ",", 
     RowBox[{"-", "2.5378012255425246`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", 
     RowBox[{"-", "2.225642570547906`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"125", ",", 
     RowBox[{"-", "2.0010888767088937`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"130", ",", 
     RowBox[{"-", "1.330587222092194`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"135", ",", 
     RowBox[{"-", "1.236644078620526`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140", ",", 
     RowBox[{"-", "0.8613410053893408`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"145", ",", 
     RowBox[{"-", "0.7666817786624514`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"150", ",", 
     RowBox[{"-", "0.011487732048985079`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"155", ",", "0.5385748285081159`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"160", ",", "1.3138473165542714`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"165", ",", "1.5621460752120178`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"170", ",", "1.8302109763618148`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"175", ",", "2.093829782703241`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"180", ",", "2.6034934364240825`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"185", ",", "2.826877313742701`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"190", ",", "3.5004249391196356`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"195", ",", "3.533251871702772`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"200", ",", "4.7013949111047`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8099380217211246`*^9, {3.809938208734148*^9, 3.8099382242390375`*^9}, 
   3.8099401561926684`*^9, 3.809940187197467*^9, 3.8099403175367026`*^9, 
   3.8099406698240147`*^9, 3.8099440466915693`*^9, 3.8099482648067064`*^9, 
   3.8099488157003455`*^9},
 CellLabel->
  "Out[270]=",ExpressionUUID->"72cb7ea1-ed3d-430e-af95-71fe941ea0e6"]
}, Open  ]],

Cell["\<\
Find a fitting model to the data. Find the best values for a and b to make a \
linear function that fits our dataWithLog.\
\>", "Text",
 CellChangeTimes->{{3.8099448521168327`*^9, 3.8099448889037094`*^9}, {
  3.8099449477800083`*^9, 3.809944973945956*^9}, {3.809945414325074*^9, 
  3.809945436822961*^9}, {3.809948001510029*^9, 3.8099480156672564`*^9}, {
  3.809948921534672*^9, 
  3.8099489691841984`*^9}},ExpressionUUID->"ba0c0dcc-9955-4691-98bc-\
7eafdff9aca9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solution", "=", 
  RowBox[{"FindFit", "[", 
   RowBox[{"dataWithLog", ",", 
    RowBox[{
     RowBox[{"a", " ", "x"}], "+", "b"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.809938240121311*^9, 3.8099382817465563`*^9}, {
  3.809938336124701*^9, 3.809938338809269*^9}, {3.809940523269431*^9, 
  3.809940557199015*^9}, {3.8099406737940016`*^9, 3.809940678580819*^9}, {
  3.809944050031658*^9, 3.809944051631956*^9}, {3.8099444095041294`*^9, 
  3.809944413638132*^9}, {3.8099444529994707`*^9, 3.8099444574657416`*^9}, {
  3.809944843016331*^9, 3.8099448445897255`*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"f00a5ddf-4c26-4ad1-88a3-fb0cf4fe08fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "0.0771777642458322`"}], ",", 
   RowBox[{"b", "\[Rule]", 
    RowBox[{"-", "11.335476079043598`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.809944460935999*^9, 3.8099448449311433`*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"426482a1-434f-41d4-a282-8c52a17c4bbc"]
}, Open  ]],

Cell["\<\
The linear function should now fit our dataWithLog.
We plug the a and b values into a function that will output a predicted y \
value based on the x value.\
\>", "Text",
 CellChangeTimes->{{3.8099454457796583`*^9, 3.809945490027553*^9}, {
  3.809948975211121*^9, 
  3.809949059402988*^9}},ExpressionUUID->"46900205-df8a-4b17-b63b-\
8603a2ee6453"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", "x_", "]"}], "=", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"a", " ", "x"}], "+", "b"}]], "/.", "solution"}]}]], "Input",
 CellChangeTimes->{{3.8099383496006403`*^9, 3.8099383675692463`*^9}, 
   3.809940577826496*^9},
 CellLabel->
  "In[134]:=",ExpressionUUID->"670e0540-a56b-4122-bc74-d271976cd24c"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   RowBox[{"-", "11.335476079043598`"}], "+", 
   RowBox[{"0.0771777642458322`", " ", "x"}]}]]], "Output",
 CellChangeTimes->{
  3.809938369847503*^9, 3.809940581052353*^9, {3.8099406982238016`*^9, 
   3.809940741703027*^9}},
 CellLabel->
  "Out[134]=",ExpressionUUID->"ccd5f6a4-264d-4ec1-81cf-59bb88d63c03"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s see if the model fits out data.", "Text",
 CellChangeTimes->{{3.809945496244034*^9, 3.809945503519436*^9}, {
  3.8099455668573055`*^9, 
  3.8099455718101983`*^9}},ExpressionUUID->"e34ffa95-fde0-41af-88c3-\
a981abf9d85b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelplot", "=", 
   RowBox[{"LogPlot", "[", 
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "100", ",", "200"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"modelplot", ",", "dataplot"}], "]"}]}], "Input",
 CellChangeTimes->{{3.809938376357955*^9, 3.8099384667243176`*^9}, {
  3.809940810418956*^9, 3.8099408201290884`*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"e8bdae5c-48f6-4f06-a99b-04f7af4ea1b3"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVkFlQUwcYRpMAkkAwl0opRUWiQXAHRWRAub8FqeJCcIOEqFnhhlVF1BEC
WC24DYtBZWkKlEV0ylKNYlC5dyypiFEjohKaBAtYdQoINoKBGEsfznxzHr/D
FKZul1BIJNLWaf7f7ZEFVBKJAybMOZU+RicKPzzNHSdzwLi2JmXVEJ14csHF
btiGA+3ImhTuGzqxRV9K7rXnwPlbvOR6A50Il9ZMXmdwwJdanxjWSSeCT6iG
4udxIOlyCJZZTSdYLQPaJyEc6H+dKBjaRSc+egSWVsg40CX8Y4em1ZEw8OWg
teOCqaUwKy3BgfgYY5s5eZILRMaLRrEvjRjZgDPryLGQtN1zMstiTyypXWrs
PxUL/JPZZ3MaZxAlrU3Lv7XngYXFna85bEdEfPf6wqsCHug9I75YWbaEoU0c
v8h1D1SuCJng6ihExZhZkyjfA/SGBhOphkzUXVy/CZ29F4gfVwbm7yQR+rGf
OfSyvRBYJqE8DLDipvXh3VzXfdC8LaXzoXYKZ9tWSoIU066q8igPMOPJbXnq
0058cKNoZNaOcfz59ZKBtig+kMhMqa+3CW+ofnxTWcyHeq+sM8qiMVyRwtjp
/YwP7Mia5NKoEbzp4JXMflcB7CeqjHHfvMN1UdtS3XcLYMXQOQkvYBD3Stgy
XFYmAKZDOc2oM+D9mameeoMA8K61nluOPsNbEhRzy+YIIYt5SO1y/ne8sYhV
V8kXAvVVa2htXy56V37z04JKIYTK/V2lNDW6rjCZhBmFAF7jsxYwu9E+tUxu
YoqgaqF3UnS+ES19UTL6mS8CNidEo2ANoumeTrrIWhHAtVmdBxPeoffEdYeF
b0XQjPfEVl8aQReejDCOLRRDIK3nn+c3xtAG/fdPHySIAbGUKBx3mtDNCDvf
46oYCp1FYQ3qcZQbIiP5vxUDm+x1w7LYjJ6ttbEWLZHAqaA7pbL2KbT7TbE6
KUEC2EVeWoKfFUVF2W6FjRLQz5Xyw6QkuKc6tNp3ZNqP1x8/XU2Gmw4F9kVL
48DSNZBX+5ICmmKKJGh/HPR00Db2etnCpDnnHL8pDqhsJUW9xw4iSmLQJ//G
wWjGpiMdTTPA0W/XZWtAPFiKe7W/TNnDYA1PdzU9HvjoKGuVHw36ou5erFDF
Q2b+6Ep9jgN80Pl4OJvjYSglPTi41RHSeSpu6BoMctaO+xwYpoO7W/X8tmMY
dDQKtHjQTHjZeEl5Q4UBdi3qYPsBBsj8lIbHrRjcUcb5+x1hwAKldsbb2xi4
tGSMKzIZkKqicdzbMGi/XXvsSB4D7NszPmfdw4ClNv+wWMGANbp94RsfYjD4
skpe2MGASzY+Pb16DJqtR7mNDATW5YaRTQYM9Nknbou/QmCAKljs1IcBlZw/
Z/bXCKyYWZaJ/oUB36bamOeOwH03OrPmNQYI9ZFQ4IXAxLJRafIIBvudmYku
wQgomuny3PcY/HR+iaZzHQKhqxbdqRid/jcrYNlxQKAgUDiz6wMGnq6b3w9v
QMA7tPtawAQGWvf0tPtsBB6pR/+M/ISBpTy7W7YDgbSNTnZSMwY+c8+s9t+N
AL41PLp8arrfvIqJylgEJFphjtKCwa+VV2Ki9yLguCP7yqPPGLxgKlVOAgR+
e17e9bcVA0p1m3u7CIHomFtTX75gsJz1IONYHAL/ATV0PHQ=
        "]]},
      Annotation[#, "Charting`Private`Tag$66045#1"]& ]}, {}}, {{}, {
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQGRDvwyadN+72M/AOY6RDkIbjOv+9AO5TdEO1xf
WfhYq5wFwj8Q49C8cPauLF8onyHOoXmrxkbZc4xQ/fEOqlf7HlkxMUD5CQ49
J7ZeFvX6uh/Mf5DgsLlS3df75GcIvyHRwdxamll6wmsIXyHJwSp7p+WKjhcQ
/oEkh+VCS70ftrVD+AnJDvktMe6MNg/tIfanOJTP7jjcwvoVwl+Q4iB2hPNR
z78fEL5DqoOvIItft8dfCP9BqoPreYcrmgcYHCD2pzkYhz2L/XKZBcJXSHdw
WZR0q3AuG4R/IN1B/GfMqXsMPBB+QoaDzJfVfZIuUD5DpoOC1OZyq3NCDgBJ
mGTY
       "]]}, {
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["x", HoldForm], TraditionalForm], 
    FormBox["y", TraditionalForm]},
  AxesOrigin->{100., -3.617699496954737},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Quiet[
      Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{100, 200}, {-3.617699496954737, 4.100076612617199}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, Quiet[
      Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, {
    Automatic, {{-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.50\"", 0.5, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}}, {-4.605170185988091, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.912023005428146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.506557897319982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.2188758248682006`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.659260036932778, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.5257286443082556`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.4079456086518722`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.605170185988092, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.0106352940962555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.298317366548036, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{{3.8099384465661564`*^9, 3.8099384673957825`*^9}, {
   3.80994077131341*^9, 3.80994079028109*^9}, 3.8099408221716537`*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"cd03c139-5ae7-4e2b-8af3-228bfdacef09"]
}, Open  ]],

Cell["\<\
Yes we think that the model fits our data!
Let\[CloseCurlyQuote]s see how it fits in a normal x and y coordinate system, \
without the log on the data or coordinate system.\
\>", "Text",
 CellChangeTimes->{{3.809945575722231*^9, 3.8099456115129337`*^9}, {
  3.8099490876878567`*^9, 
  3.8099491089883957`*^9}},ExpressionUUID->"e0a790cc-0a38-40b2-b4fe-\
27446b5c7b2b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"model", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "100", ",", "250"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"model", ",", "dataplot", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"100", ",", "205"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "110"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.809938561536806*^9, 3.809938630418761*^9}, {
  3.8099386938823223`*^9, 3.8099387026558337`*^9}, {3.8099408749791117`*^9, 
  3.8099409389964104`*^9}, {3.8099464327552614`*^9, 3.8099465332968545`*^9}, {
  3.8099465742761383`*^9, 3.809946718700893*^9}, {3.8099467578635454`*^9, 
  3.809946886418801*^9}, {3.80994697103201*^9, 3.8099469711026287`*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"df999e65-499f-403f-9c56-927005759792"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwVl3k0FVwXxo1FZc6QmWSmEoXKeQwhIVKZuZPrutyryVAaFFE0UwmhDBGJ
SEUijZQImUqRsaIZFS+f759z1l77rN8++zlrPWsfNVrolgA+Hh4eibnl//vU
RPsiHh5PJHJC78gcSCOdX8wbfvB54oXvGS/lC2mkojcjvl/QE6NBhs/X3Uwj
uxqYfM8WeqJbe3Lbg7408vnyxORJWU/I7As/2m6XTjptZPoVlnviYu94LUfu
Mqk4t+3eGj9PPH1TK938IoMkx98L16F6Ymhox+3u4Qyya7+SsQLDE5WKOT0z
/JnEgDlYPBPkCfV9+RrJ6zJJjllYzpMwT1i4+imNF2eSpN7k024nPRFQ+qZ2
i2MW2WHYFhB63xOLT9mFmOAKmXatPZ5V44ksE/7D612vkPiwohuv6zwRExfE
3E67QjLux46vqvfEgHfxYGXsFfLSweTonzeeWFk3leDScIVoBV7IOfzNE6/L
ApyrPa6S95ke/UnqXphkrteUjckm7Ec2858s80Kt/LqHXheyyfjQCr0JbS/I
GmtTSwuyySJD4d0ey70Q5jL572JzNjG/f49PaZ0X5nEb8h1Vcsj5Tnn1vG1e
cDDsq2bU5hBHiR7K3WNeeCv0ya5bIo8o3rH0K0ucy5P7/EaaeWTMJ8+7+JQX
Dtx5cijdPI+cyg/dnpPshaQbN/4roOeRZsLneCbLCycbS/7kV+SRbVytNay7
Xvjx/JS/LeUa8XuxU0RuxAtn33mMH6jLJ6FH51VG2HlDpO2rrsSzQjI9NFJD
d/BGiZLCH93eQpJg/+LJZidvnO/v2u39t5DkLTzzWsvNG5y9SvU8+kXk/dkl
nzr8vKFctcrA/1wRcczQlzMN98aELJ/BAfoNontnS/ifHG/MWysb3yZ7k9yV
M9k/cM0ba4z7HMdW3SS2+2SPNF/3RoGrU7iKy01CXf/uZH6JN56+G9zcfOwm
SXkUkOtx3xsa0am5zKmbZH5zZNvdVm/cPyFrWL2rhAyMZBjt5fOB4xkR41/M
UqK6VzgzR9AHIpt4yvkiS4m38J6FzUI+6NK/M6Z+vJS06Gwc0BTzQeE2uebz
haWklv3rfJuCDy7uq1Wx+1FK0kbt/i438UEVTeDS0KFbZMv37zVDgT4I6DjR
dvZ6GTkV7a0vGewDzk36ua7qMlIv/jRlPdcHkfzSa4xflxGsTNuZvMcH3DrT
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
+D8lhU298vA/RCMK7g==
        "]]},
      Annotation[#, "Charting`Private`Tag$86758#1"]& ]}, {}}, {{}, {
     {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQGRDrVTa97oBayyB3MdohyCo18prGdfDeE3RDsc
lLGty7+8GcI/EOPgkCWs/t16C4TPEOeQ28tx7ODS3VD98Q6iT9KVr/sehPIT
HBod0i8te3UBwn+Q4PCn81Sb6dRLUPMTHV7/l3l2mvs2hK+Q5KC97JK/xe67
UPuSHGIKC0PyFr2H8BOSHeZqe3EezPoNtT/F4dfsgI6Gw7wOYO4CKF9YGMJ3
SHVYf4H99I0PEhD+g1QHg117LGOsFSD8hjQHlv/RJ/tYtSF8hXSH/LrDLs1P
DCD8A+kOlZVW4VMmOED4CRkO7s8m2kvIOUL4DJkOnvNe/y5oi3YAAEvvZjw=

       "]]}, {
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{100.00000306122449`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{100, 205}, {0, 110}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.809938617034521*^9, 3.809938631046337*^9}, 
   3.809938703300572*^9, {3.8099408646037197`*^9, 3.8099409399095044`*^9}, {
   3.8099464344596205`*^9, 3.8099465160311832`*^9}, {3.8099465784870095`*^9, 
   3.8099467191065054`*^9}, 3.8099467594888296`*^9, {3.80994681000091*^9, 
   3.809946886928401*^9}, 3.8099469720419283`*^9},
 CellLabel->
  "Out[266]=",ExpressionUUID->"8c9d41fa-9af6-4600-b730-3e4b1fe73bbd"]
}, Open  ]],

Cell["\<\
The model is deemed to be satisfactory, with that model it will be possible \
to approximate how long time it will take to crack ciphers that would take \
too long to actually take the time of.\
\>", "Text",
 CellChangeTimes->{{3.8099491339779263`*^9, 3.8099491685684757`*^9}, {
  3.809971362603952*^9, 
  3.809971447484181*^9}},ExpressionUUID->"f5373482-0438-4039-85aa-\
ddc4f6624fe9"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Approximating time needed to crack a RSA key with an n-value 1024, 2048 and \
4096 bits long\
\>", "Subsubsection",
 CellChangeTimes->{{3.8099456316191263`*^9, 3.809945705239483*^9}, {
  3.8099508721449547`*^9, 3.809950873116357*^9}, {3.809968668481579*^9, 
  3.8099687331666117`*^9}},ExpressionUUID->"09900c50-a81d-43ce-a96e-\
b3eac6335e90"],

Cell["Cracking a cipher of 1024 bits:", "Text",
 CellChangeTimes->{{3.809949181710702*^9, 
  3.809949197195627*^9}},ExpressionUUID->"5b039484-d13c-4603-be52-\
b72281a58c18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", "[", "1024", "]"}]], "Input",
 CellChangeTimes->{{3.8099388276026096`*^9, 3.8099388344952483`*^9}, {
  3.809938906610624*^9, 3.8099389213688917`*^9}, {3.809945713348635*^9, 
  3.8099457284855356`*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"32af88a6-de74-428e-a5cf-1a0fd6901b98"],

Cell[BoxData["2.5082537950795786`*^29"], "Output",
 CellChangeTimes->{
  3.8099388351944017`*^9, {3.8099389082304883`*^9, 3.8099389226804123`*^9}, 
   3.809940952438077*^9, {3.8099457142312336`*^9, 3.8099457294657393`*^9}},
 CellLabel->
  "Out[183]=",ExpressionUUID->"5a9bf2e2-886e-47e8-bc89-135c3a1286f0"]
}, Open  ]],

Cell["\<\
The result we get here is in seconds, lets find out how many years that is!\
\>", "Text",
 CellChangeTimes->{{3.8099457339993877`*^9, 
  3.809945764746402*^9}},ExpressionUUID->"8809b9c5-4afd-4689-9b23-\
319d7168c738"],

Cell[BoxData[
 RowBox[{
  RowBox[{"secondsToYears", "[", "seconds_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"seconds", "/", "60"}], "/", "60"}], "/", "24"}], "/", 
   "365"}]}]], "Input",
 CellChangeTimes->{{3.809945843290772*^9, 3.809945881202674*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"c31449a7-44b1-44cc-94b6-fe6d3d6ecdf7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"secondsToYears", "[", 
  RowBox[{"y", "[", "1024", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8099458947278633`*^9, 3.809945901049748*^9}, {
  3.8099459356618814`*^9, 3.809945990752637*^9}, {3.809946063029599*^9, 
  3.8099461052069407`*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"2cb9e7bb-a874-461e-8a57-e126e640eb64"],

Cell[BoxData["7.953620608446152`*^21"], "Output",
 CellChangeTimes->{
  3.8099459016899233`*^9, {3.809945936527602*^9, 3.8099459912299833`*^9}, {
   3.8099460679133377`*^9, 3.8099461061526604`*^9}},
 CellLabel->
  "Out[198]=",ExpressionUUID->"819117c2-784d-4cff-be6a-516d090d84d3"]
}, Open  ]],

Cell["\<\
After such a long time, anything that is decrypted is most unlikely to be of \
value to anyone.
For the bigger numbers:\
\>", "Text",
 CellChangeTimes->{{3.8099460000615816`*^9, 3.809946060025801*^9}, {
  3.8099461112728777`*^9, 3.8099461198083916`*^9}, {3.809949243499771*^9, 
  3.8099492542028847`*^9}, {3.809971464356662*^9, 
  3.809971510276288*^9}},ExpressionUUID->"e4ac97a7-82af-435d-a7b2-\
be13a24dd137"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"secondsToYears", "[", 
  RowBox[{"y", "[", "2048", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8099461213634367`*^9, 3.809946128192299*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"d2b908d7-a2bc-42dd-a0cd-9f51ca15f9c1"],

Cell[BoxData["1.6705945489077296`*^56"], "Output",
 CellChangeTimes->{3.8099461287204466`*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"2a19e7e4-285e-481a-bda9-3e8f671cb060"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"secondsToYears", "[", 
  RowBox[{"y", "[", "4096", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8099461316876507`*^9, 3.8099461375285006`*^9}, {
  3.8099463765661316`*^9, 3.8099463788228703`*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"8434e574-7922-4d49-9a0c-27cabb6ff387"],

Cell[BoxData["7.370270675940812`*^124"], "Output",
 CellChangeTimes->{3.8099463793776393`*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"fe819094-e30b-4b20-bdcd-3472ed86b91f"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{714., 777.75},
WindowMargins->{{3, Automatic}, {-117.75, 15.}},
PageHeaders->{{None, None, None}, {
   Cell[
    TextData[{"KTH/ICT - Kommunikationssystem"}], "PageHeader", FontFamily -> 
    "Arial", FontSize -> 9], None, None}},
PageFooters->{{None, None, None}, {None, 
   Cell[
    TextData[{
      CounterBox["Page"]}], "PageNumber"], None}},
PrintingOptions->{"FacingPages"->False},
TrackCellChangeTimes->True,
Magnification:>0.7 Inherited,
FrontEndVersion->"12.1 for Linux x86 (64-bit) (June 19, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell["Modify the definitions below to change the default appearance of all \
cells in a given style. \nMake modifications to any definition using commands \
in the Format menu.", "Text"], 
   Cell[
    CellGroupData[{
      Cell["Notebook Options Settings", "Section"], 
      Cell[
       StyleData["Notebook"], ShowCellBracket -> Automatic]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Title", "Subsection"], 
         Cell[
          StyleData["Title"], FontFamily -> "Arial", FontSize -> 36, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subtitle"], FontFamily -> "Arial", FontWeight -> "Bold"], 
         Cell[
          StyleData["Subsubtitle"], FontFamily -> "Arial", FontSize -> 18]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
         "Chapter", "Subsection", 
          CellChangeTimes -> {{3.6182073006504073`*^9, 
           3.6182073204926414`*^9}}], 
         Cell[
          StyleData["Chapter"], FontFamily -> "Arial", FontSize -> 34, 
          FontWeight -> "Plain", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}], 
         Cell[
          StyleData["Subchapter"], CellDingbat -> 
          StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
            RGBColor[
            0.09803921568627451, 0.32941176470588235`, 0.6509803921568628]], 
          FontFamily -> "Arial", FontSize -> 28, FontWeight -> "Plain", 
          FontSlant -> "Plain", 
          FontVariations -> {
           "StrikeThrough" -> False, "Underline" -> False}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Section", "Subsection"], 
         Cell[
          StyleData["Section"], CellDingbat -> None, ShowGroupOpener -> True, 
          FontFamily -> "Arial", FontSize -> 24, FontWeight -> "Bold", 
          FontColor -> GrayLevel[0.5]], 
         Cell[
          StyleData["Subsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{40., 3.}, {8., 12.}}, FontFamily -> "Arial", 
          FontSize -> 18, FontWeight -> "Bold", FontColor -> GrayLevel[0.3]], 
         Cell[
          StyleData["Subsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, CellMargins -> {{53., Inherited}, {2, 10}}, FontFamily -> 
          "Arial", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
          GrayLevel[0.]], 
         Cell[
          StyleData["Subsubsubsection"], CellDingbat -> None, ShowGroupOpener -> 
          True, MenuSortingValue -> 1400, FontFamily -> "Arial Narrow", 
          FontSize -> 14, FontWeight -> "Bold", FontSlant -> "Plain", 
          FontVariations -> {"StrikeThrough" -> False, "Underline" -> False}, 
          FontColor -> GrayLevel[0]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell["Standard", "Subsection"], 
         Cell[
          StyleData["Text"], FontFamily -> "Times"], 
         Cell[
          StyleData["SmallText"], MenuSortingValue -> 1425, FontFamily -> 
          "Times"]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Display", "Subsection"], 
         Cell[
          CellGroupData[{
            Cell["Lists", "Subsubsection"], 
            Cell[
             StyleData["Item"], CellDingbat -> 
             StyleBox["\[FilledCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.3]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["Subsubitem"], CellDingbat -> 
             StyleBox["\[FilledSmallCircle]", Alignment -> Baseline, 
               GrayLevel[0.5]], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemParagraph"], FontFamily -> "Times"], 
            Cell[
             StyleData["ItemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubitemNumbered"], FontFamily -> "Times"], 
            Cell[
             StyleData["SubsubitemNumbered"], FontFamily -> "Times"]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell["Templates", "Subsubsection"], 
            Cell[
             StyleData[
             "SideCaptionArray", StyleDefinitions -> StyleData["Text"]], 
             GridBoxOptions -> {
              GridBoxAlignment -> {"Columns" -> {Left}, "Rows" -> {Center}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}}], 
            Cell[
             StyleData[
             "SideCaption", StyleDefinitions -> StyleData["SmallText"]]]}, 
           Closed]]}, Closed]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       StyleData["Input"], ShowCellBracket -> True], 
      Cell[
       StyleData["InputOnly"], ShowCellBracket -> True], 
      Cell[
       StyleData["Code"], ShowCellBracket -> True], 
      Cell[
       StyleData["Output"], ShowCellBracket -> True], 
      Cell[
       StyleData["Message"], ShowCellBracket -> True], 
      Cell[
       StyleData["Print"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Formulas and Programming", "Section"], 
      Cell[
       StyleData["InlineFormula"]], 
      Cell[
       StyleData["DisplayFormula"], FontFamily -> "Times"], 
      Cell[
       StyleData["DisplayFormulaNumbered"], FontFamily -> "Times"], 
      Cell[
       StyleData["Program"], ShowCellBracket -> True]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell["Citation Styles", "Section"], 
      Cell[
       StyleData["Reference"]]}, Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       TextData[{"Styles for ", 
         StyleBox["Mathematica", FontSlant -> "Italic"], 
         " System\[Hyphen]specific Elements"}], "Section"], 
      Cell[
       CellGroupData[{
         Cell["Default Box Styles", "Subsection"], 
         Cell[
          StyleData["Graphics"], FontFamily -> "Times"], 
         Cell[
          StyleData["Graphics3D"], FontFamily -> "Times"], 
         Cell[
          StyleData["NetworkGraphics"], FontFamily -> "Times"]}, Closed]]}, 
     Closed]]}, Visible -> False, FrontEndVersion -> 
  "12.1 for Linux x86 (64-bit) (June 19, 2020)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"e1e3d958-8fff-42bb-8c88-823291d27a51"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 214, 4, 58, "Title",ExpressionUUID->"2e086750-1cf1-4c43-bc57-bac07652a650"],
Cell[797, 28, 237, 7, 38, "Text",ExpressionUUID->"679e81cd-23f2-4ac3-aad0-55498a6469d8"],
Cell[1037, 37, 211, 6, 38, "Text",ExpressionUUID->"39bfcd1a-7896-4364-9d2c-9b6c98366775"],
Cell[CellGroupData[{
Cell[1273, 47, 224, 4, 45, "Chapter",ExpressionUUID->"2760ab7a-2fed-4ae4-a63f-890119ad5062"],
Cell[CellGroupData[{
Cell[1522, 55, 154, 3, 42, "Section",ExpressionUUID->"28ab532a-4f99-4328-b494-a8a51a0e3e70"],
Cell[CellGroupData[{
Cell[1701, 62, 81, 0, 29, "Subsection",ExpressionUUID->"4df8543c-22f8-401d-8973-c66d5fa62864"],
Cell[CellGroupData[{
Cell[1807, 66, 313, 5, 21, "Subsubsection",ExpressionUUID->"161333eb-850b-4b36-a9af-139375019ff9"],
Cell[2123, 73, 288, 7, 23, "Text",ExpressionUUID->"ccc80051-6278-41c5-8265-709150a2dc17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2448, 85, 313, 5, 21, "Subsubsection",ExpressionUUID->"6ea1059a-f803-4929-b3ba-5100aa11cd71"],
Cell[2764, 92, 640, 12, 99, "Text",ExpressionUUID->"e52318ff-628b-42f7-8b29-83386cc983c8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3453, 110, 83, 0, 29, "Subsection",ExpressionUUID->"39a0ef6c-6a2c-4081-9062-84513a76c571"],
Cell[CellGroupData[{
Cell[3561, 114, 313, 5, 21, "Subsubsection",ExpressionUUID->"8d6c936e-55e2-4c7d-b35a-12f8d1ebe052"],
Cell[3877, 121, 248, 4, 23, "Text",ExpressionUUID->"ec1a73b1-02e8-49f5-8010-e37498b39e58"],
Cell[4128, 127, 657, 11, 68, "Text",ExpressionUUID->"8687a15d-e4a5-434f-bbcc-181842f23fb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4822, 143, 313, 5, 21, "Subsubsection",ExpressionUUID->"f1a333c4-0c37-483e-967d-42f972d5edb6"],
Cell[5138, 150, 1256, 25, 114, "Text",ExpressionUUID->"070d7647-28f3-4c7a-84a8-4ab38baab226"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6455, 182, 157, 3, 42, "Section",ExpressionUUID->"6943093f-8a76-4b29-9b2d-76d8c3875b28"],
Cell[CellGroupData[{
Cell[6637, 189, 260, 4, 29, "Subsection",ExpressionUUID->"7e65a304-4725-4568-8fa8-1b4ca87c4741"],
Cell[CellGroupData[{
Cell[6922, 197, 313, 5, 21, "Subsubsection",ExpressionUUID->"977e9433-76ef-40c5-ae1a-36140a599b30"],
Cell[7238, 204, 2058, 60, 121, "Text",ExpressionUUID->"bfdc78b0-6913-4ec9-9c18-b98878f166ba"],
Cell[9299, 266, 2180, 60, 185, "Text",ExpressionUUID->"c45d03bb-fc00-4a86-b022-4a745aa5161a"],
Cell[11482, 328, 224, 5, 23, "Text",ExpressionUUID->"62460dc4-4cc0-4e3b-94ec-55f9b95cb59c"]
}, Closed]],
Cell[CellGroupData[{
Cell[11743, 338, 313, 5, 18, "Subsubsection",ExpressionUUID->"d6b77e3e-27c5-47b3-a3b5-4a7acd51f45c"],
Cell[12059, 345, 300, 6, 23, "Text",ExpressionUUID->"5d2480b5-0804-4b1e-8e25-078833cb3ef3"],
Cell[12362, 353, 942, 22, 55, "Text",ExpressionUUID->"e75ff863-4ba3-4480-acbf-b50a43a9a96b"],
Cell[13307, 377, 525, 15, 40, "Text",ExpressionUUID->"42cb131c-3fcb-426c-837a-8e4bcdee9191"],
Cell[13835, 394, 162, 3, 23, "Text",ExpressionUUID->"feb37c92-8227-4d07-9e4d-20cb3f693836"],
Cell[14000, 399, 1237, 34, 69, "Text",ExpressionUUID->"faf9b49f-5812-48d0-b8af-a90bf8924b18"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15286, 439, 261, 4, 29, "Subsection",ExpressionUUID->"1db48066-a568-4f09-a9b7-7f37a8e3983c"],
Cell[CellGroupData[{
Cell[15572, 447, 313, 5, 21, "Subsubsection",ExpressionUUID->"c2fe6c5a-7b05-4a35-8914-2c11f835cb16"],
Cell[15888, 454, 786, 13, 83, "Text",ExpressionUUID->"8bc3c27b-16ad-4384-ba45-2d65b46fc60b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16711, 472, 313, 5, 21, "Subsubsection",ExpressionUUID->"6898ac68-f453-4f36-8d12-041103da9488"],
Cell[17027, 479, 1380, 22, 189, "Text",ExpressionUUID->"26ad0f27-7987-4a67-8c93-eab6355d59db"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18456, 507, 261, 4, 29, "Subsection",ExpressionUUID->"0d9a9f34-a525-43cf-bd8e-0cfedc7628d9"],
Cell[18720, 513, 1877, 49, 202, "Input",ExpressionUUID->"5c79db69-9932-4e83-9826-3d0b76a3ccd2"],
Cell[20600, 564, 1997, 50, 179, "Input",ExpressionUUID->"a53c4830-589c-40be-aceb-7a6b948f6fe3"],
Cell[22600, 616, 7846, 193, 164, "Input",ExpressionUUID->"db5d34c6-a431-45d8-8aeb-590ca41ea82e"],
Cell[30449, 811, 9093, 210, 169, "Input",ExpressionUUID->"6e406c88-5a2b-4bfb-b371-650bd0d5178f"],
Cell[39545, 1023, 13406, 241, 163, "Input",ExpressionUUID->"5e9b13a5-d9e7-4b43-b158-44d5fa553546"]
}, Closed]],
Cell[CellGroupData[{
Cell[52988, 1269, 310, 5, 24, "Subsection",ExpressionUUID->"db28806a-e03d-47f0-a595-350e6f651e2c"],
Cell[53301, 1276, 149, 3, 23, "Text",ExpressionUUID->"9ee581cc-bcff-448a-bcab-50960ecada41"],
Cell[CellGroupData[{
Cell[53475, 1283, 313, 5, 21, "Subsubsection",ExpressionUUID->"1d2de644-2239-4c75-b4ca-9c86d216b911"],
Cell[53791, 1290, 304, 7, 23, "Text",ExpressionUUID->"49af315e-9706-4483-b4fa-39eddbe6ee63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54132, 1302, 313, 5, 21, "Subsubsection",ExpressionUUID->"f342ab51-9279-47c5-9865-9e8d0473165b"],
Cell[54448, 1309, 638, 10, 68, "Text",ExpressionUUID->"72c1fd5d-fcba-4bfc-819c-c8027bd6c1f9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55147, 1326, 78, 0, 42, "Section",ExpressionUUID->"eb232638-2837-4382-9654-616c94d28459"],
Cell[CellGroupData[{
Cell[55250, 1330, 209, 4, 29, "Subsection",ExpressionUUID->"f3d26aa5-36c8-4225-84a7-f5bd8572d6ad"],
Cell[CellGroupData[{
Cell[55484, 1338, 219, 4, 21, "Subsubsection",ExpressionUUID->"b7d15daa-110a-43a0-82dc-38fb29ba30a4"],
Cell[55706, 1344, 718, 12, 38, "Text",ExpressionUUID->"374696a4-00ca-4ea0-8364-3560bf974aba"],
Cell[56427, 1358, 2231, 43, 202, "Input",ExpressionUUID->"c2cd1dfb-a242-46ac-bc5e-67af2039550a"]
}, Closed]],
Cell[CellGroupData[{
Cell[58695, 1406, 258, 4, 18, "Subsubsection",ExpressionUUID->"63d55d2f-32d7-4024-b0dd-a319ff0bd7ec"],
Cell[58956, 1412, 1996, 59, 121, "Text",ExpressionUUID->"3164d61f-89be-4664-97d3-9cf3b8581302"],
Cell[CellGroupData[{
Cell[60977, 1475, 206, 4, 21, "Input",ExpressionUUID->"f661cc54-0508-4f56-8d2c-760aa9023621"],
Cell[61186, 1481, 156, 3, 23, "Output",ExpressionUUID->"097eb17b-0634-419e-98c7-d995fc142114"]
}, Open  ]],
Cell[61357, 1487, 2180, 60, 185, "Text",ExpressionUUID->"ce88c1f0-b022-42f8-8bf6-e0133b673136"],
Cell[63540, 1549, 832, 24, 52, "Input",ExpressionUUID->"3a44aea2-a135-4021-a9b2-b3e62ae205d2"],
Cell[64375, 1575, 224, 5, 23, "Text",ExpressionUUID->"a97a6187-5376-4a24-94a2-901e32c32e82"],
Cell[64602, 1582, 787, 17, 37, "Input",ExpressionUUID->"7817cb70-2dee-4744-81ed-d3be5c512415"],
Cell[65392, 1601, 381, 9, 53, "Text",ExpressionUUID->"051f0994-c52b-4ca9-8d76-787468cfa636"],
Cell[CellGroupData[{
Cell[65798, 1614, 1394, 36, 172, "Input",ExpressionUUID->"c4c8cf65-675b-4832-8469-e7d75afba18b"],
Cell[67195, 1652, 636, 9, 54, "Output",ExpressionUUID->"7b11aa9f-8a06-416c-a3ad-5a8e92b92c0d"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67892, 1668, 207, 4, 29, "Subsection",ExpressionUUID->"d8b159bb-aca1-4212-b079-a4cc4a19d00a"],
Cell[CellGroupData[{
Cell[68124, 1676, 172, 3, 21, "Subsubsection",ExpressionUUID->"4b2e0a48-3637-4204-b7ab-99bfa65a1493"],
Cell[68299, 1681, 235, 5, 22, "Input",ExpressionUUID->"64efcf8e-e9e4-43e4-bb40-259c47c9aa06"],
Cell[68537, 1688, 1101, 21, 54, "Text",ExpressionUUID->"30422b7d-37fc-4c97-ba43-6d4177b19e15"],
Cell[69641, 1711, 445, 10, 21, "Input",ExpressionUUID->"5115463d-8e49-41e0-af6c-bd46cc94f883"]
}, Closed]],
Cell[CellGroupData[{
Cell[70123, 1726, 182, 3, 18, "Subsubsection",ExpressionUUID->"2d061427-8409-441e-a0dc-27802a482a77"],
Cell[70308, 1731, 275, 7, 38, "Text",ExpressionUUID->"293c9947-e886-4ae1-9ba8-36a59bb32b6d"],
Cell[70586, 1740, 868, 23, 37, "Input",ExpressionUUID->"b3ab3323-8423-4c8a-842b-ce2b79caf9b5"],
Cell[71457, 1765, 942, 22, 55, "Text",ExpressionUUID->"3b2fa2ed-fd1e-4e22-b2ee-ff9af5e891b6"],
Cell[72402, 1789, 761, 17, 37, "Input",ExpressionUUID->"2e1a39c1-d04f-45b9-af6a-c8211c30eff6"]
}, Closed]],
Cell[CellGroupData[{
Cell[73200, 1811, 178, 3, 18, "Subsubsection",ExpressionUUID->"d05e3077-bc4d-48d5-8a88-1969443e0d8e"],
Cell[73381, 1816, 525, 15, 40, "Text",ExpressionUUID->"4ab4c8fd-5b99-489f-abee-570f47440664"],
Cell[73909, 1833, 779, 17, 37, "Input",ExpressionUUID->"846c677c-29ae-47e9-b83d-abf5799eb665"],
Cell[74691, 1852, 793, 21, 52, "Input",ExpressionUUID->"ee1f1f62-ef30-4632-a78e-249fa2a640e0"],
Cell[75487, 1875, 162, 3, 23, "Text",ExpressionUUID->"478b5af7-43b9-4257-be55-54c0db398e75"],
Cell[75652, 1880, 2078, 52, 202, "Input",ExpressionUUID->"be4f2348-b861-4a99-a84f-5a1990c34176"]
}, Closed]],
Cell[CellGroupData[{
Cell[77767, 1937, 176, 3, 18, "Subsubsection",ExpressionUUID->"0e8e9263-c17b-4cb0-b878-7b282ac20ee2"],
Cell[77946, 1942, 1237, 34, 84, "Text",ExpressionUUID->"36aabeb3-4637-40e6-9cb8-0aee42023214"],
Cell[79186, 1978, 2122, 56, 127, "Input",ExpressionUUID->"740c332b-559c-43ea-be6a-55788db11b0e"]
}, Closed]],
Cell[CellGroupData[{
Cell[81345, 2039, 248, 4, 18, "Subsubsection",ExpressionUUID->"03efbd96-1731-4525-bf52-9b29425c514f"],
Cell[81596, 2045, 343, 7, 38, "Text",ExpressionUUID->"6aee2245-7ed6-49f9-916f-1fded9da934e"],
Cell[81942, 2054, 6001, 152, 466, "Input",ExpressionUUID->"b5f272a4-c0eb-4727-9309-eaf12d23d81a"]
}, Closed]],
Cell[CellGroupData[{
Cell[87980, 2211, 173, 3, 18, "Subsubsection",ExpressionUUID->"88c43ae0-d0e8-48e5-8f3d-fb46f1dea73d"],
Cell[88156, 2216, 4510, 95, 592, "Input",ExpressionUUID->"38013ea5-e4ac-4c09-bbb1-b58a88b0a4c7"]
}, Closed]],
Cell[CellGroupData[{
Cell[92703, 2316, 171, 3, 18, "Subsubsection",ExpressionUUID->"0963da78-a002-4137-aa52-eb314e6c2e56"],
Cell[92877, 2321, 964, 23, 67, "Input",ExpressionUUID->"3da94f47-5d97-4b62-a2e6-84f58dab6c69"]
}, Closed]],
Cell[CellGroupData[{
Cell[93878, 2349, 219, 4, 18, "Subsubsection",ExpressionUUID->"0797a90c-9561-4815-901f-83c7d2b5a3fb"],
Cell[94100, 2355, 1079, 24, 112, "Input",ExpressionUUID->"f1968a9a-3aed-402b-a512-50e75c9d46a3"]
}, Closed]],
Cell[CellGroupData[{
Cell[95216, 2384, 168, 3, 18, "Subsubsection",ExpressionUUID->"2b8331a7-1483-412d-a8cd-ab8560444f7a"],
Cell[95387, 2389, 4912, 108, 397, "Input",ExpressionUUID->"52b84c58-e9d8-496d-a230-66c4454a68d3"]
}, Closed]],
Cell[CellGroupData[{
Cell[100336, 2502, 167, 3, 18, "Subsubsection",ExpressionUUID->"15caaaf2-5b90-4747-bd47-4b3f67fab0da"],
Cell[CellGroupData[{
Cell[100528, 2509, 1472, 33, 142, "Input",ExpressionUUID->"77a5851c-d32d-4391-b76f-2b72d73e14ab"],
Cell[CellGroupData[{
Cell[102025, 2546, 478, 11, 17, "Print",ExpressionUUID->"9e7b8be3-68bd-401f-b6f2-1b07d31ce6b7"],
Cell[102506, 2559, 476, 11, 17, "Print",ExpressionUUID->"b5e5de1d-ebc2-4486-a2ee-d19f8ed7f116"],
Cell[102985, 2572, 478, 11, 17, "Print",ExpressionUUID->"10b61256-13bf-4665-94ce-69fd5efddc07"],
Cell[103466, 2585, 478, 11, 17, "Print",ExpressionUUID->"cb1bc6e3-fc0c-4119-a439-78027917289a"],
Cell[103947, 2598, 476, 11, 17, "Print",ExpressionUUID->"0ae67a8d-f34b-4ee5-bb11-0859e497c665"],
Cell[104426, 2611, 478, 11, 17, "Print",ExpressionUUID->"3ef2dd82-f538-4bc7-98fe-6e4fd520ea88"],
Cell[104907, 2624, 476, 11, 17, "Print",ExpressionUUID->"b429efea-67b2-49d9-acd0-6671d97eb1a1"],
Cell[105386, 2637, 478, 11, 17, "Print",ExpressionUUID->"6e08b2f5-5538-4cc7-96ff-496af8fba28a"],
Cell[105867, 2650, 476, 11, 17, "Print",ExpressionUUID->"a7ca1159-0dde-494c-aba7-3f6060981aee"]
}, Open  ]],
Cell[106358, 2664, 1753, 45, 150, "Output",ExpressionUUID->"d0e7bd29-aa4b-4a57-8b7a-a689049d36b0"]
}, Open  ]],
Cell[108126, 2712, 151, 3, 21, "Input",ExpressionUUID->"6b6652be-c7fc-4cb4-a4f6-88c808f20b21"],
Cell[CellGroupData[{
Cell[108302, 2719, 2340, 63, 161, "Input",ExpressionUUID->"7de506fd-413e-4c1d-9070-692b2437e46e"],
Cell[110645, 2784, 1946, 51, 205, "Output",ExpressionUUID->"201f5350-1abd-4685-bbc8-776e7e0ad980"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[112640, 2841, 331, 5, 18, "Subsubsection",ExpressionUUID->"a52f88bf-c9c6-47f3-928a-078db26834b0"],
Cell[112974, 2848, 497, 9, 38, "Text",ExpressionUUID->"0734f93b-761a-4674-9e43-eb16d4d3d552"],
Cell[113474, 2859, 1787, 49, 86, "Input",ExpressionUUID->"1ef3a7c9-907f-4012-a1fe-8b1243925738"],
Cell[115264, 2910, 287, 7, 38, "Text",ExpressionUUID->"239392bd-f891-4885-a67a-8378f6c0fdb4"],
Cell[CellGroupData[{
Cell[115576, 2921, 323, 8, 21, "Input",ExpressionUUID->"f59428df-eca7-45c6-9c13-9baa5330e726"],
Cell[115902, 2931, 469, 9, 23, "Output",ExpressionUUID->"7087cb8d-7b28-4eab-bf63-48c6330f9b2e"]
}, Open  ]],
Cell[116386, 2943, 225, 4, 23, "Text",ExpressionUUID->"20328b4b-f208-45be-b0c5-a9739ad45a98"],
Cell[CellGroupData[{
Cell[116636, 2951, 323, 8, 21, "Input",ExpressionUUID->"a68f32ba-1292-4f76-a650-5e077391ef1f"],
Cell[116962, 2961, 632, 12, 39, "Output",ExpressionUUID->"7b701d1f-b919-41bd-bbe0-fcbfeaac326d"]
}, Open  ]],
Cell[117609, 2976, 287, 5, 23, "Text",ExpressionUUID->"771e3d46-a999-4ee9-9a9a-4ee6b91a7457"],
Cell[CellGroupData[{
Cell[117921, 2985, 1091, 21, 67, "Input",ExpressionUUID->"6b9b6ec5-28cc-420c-90d5-49567fd421ac"],
Cell[119015, 3008, 2386, 56, 181, "Output",ExpressionUUID->"5e2366fe-a5f3-4a75-a624-eea106d93fe5"]
}, Open  ]],
Cell[121416, 3067, 867, 19, 53, "Text",ExpressionUUID->"d08aec5f-f266-4b38-94b8-12343c969fb3"],
Cell[122286, 3088, 751, 24, 18, "DisplayFormula",ExpressionUUID->"47b190bc-c83e-4f07-b28f-0821f8e7f22e"],
Cell[CellGroupData[{
Cell[123062, 3116, 943, 19, 52, "Input",ExpressionUUID->"1bc6e99c-9564-4e6f-8e7d-1e3684d1f903"],
Cell[124008, 3137, 8215, 200, 167, "Output",ExpressionUUID->"a5686b8c-2f3f-4d15-bc67-5ad14e9d0283"]
}, Open  ]],
Cell[132238, 3340, 315, 7, 23, "Text",ExpressionUUID->"f393741b-6dc7-4571-ba62-225ba892628a"],
Cell[132556, 3349, 620, 11, 53, "Text",ExpressionUUID->"ac3906bd-d4d6-4ad0-a2c9-5ccab563facf"],
Cell[CellGroupData[{
Cell[133201, 3364, 658, 12, 21, "Input",ExpressionUUID->"6b989507-5b47-4d82-ab01-22fe9266b3ab"],
Cell[133862, 3378, 2290, 62, 69, "Output",ExpressionUUID->"72cb7ea1-ed3d-430e-af95-71fe941ea0e6"]
}, Open  ]],
Cell[136167, 3443, 474, 9, 23, "Text",ExpressionUUID->"ba0c0dcc-9955-4691-98bc-7eafdff9aca9"],
Cell[CellGroupData[{
Cell[136666, 3456, 744, 15, 21, "Input",ExpressionUUID->"f00a5ddf-4c26-4ad1-88a3-fb0cf4fe08fb"],
Cell[137413, 3473, 338, 8, 23, "Output",ExpressionUUID->"426482a1-434f-41d4-a282-8c52a17c4bbc"]
}, Open  ]],
Cell[137766, 3484, 356, 8, 38, "Text",ExpressionUUID->"46900205-df8a-4b17-b63b-8603a2ee6453"],
Cell[CellGroupData[{
Cell[138147, 3496, 378, 10, 21, "Input",ExpressionUUID->"670e0540-a56b-4122-bc74-d271976cd24c"],
Cell[138528, 3508, 369, 9, 23, "Output",ExpressionUUID->"ccd5f6a4-264d-4ec1-81cf-59bb88d63c03"]
}, Open  ]],
Cell[138912, 3520, 249, 4, 23, "Text",ExpressionUUID->"e34ffa95-fde0-41af-88c3-a981abf9d85b"],
Cell[CellGroupData[{
Cell[139186, 3528, 641, 17, 37, "Input",ExpressionUUID->"e8bdae5c-48f6-4f06-a99b-04f7af4ea1b3"],
Cell[139830, 3547, 9262, 213, 172, "Output",ExpressionUUID->"cd03c139-5ae7-4e2b-8af3-228bfdacef09"]
}, Open  ]],
Cell[149107, 3763, 377, 8, 38, "Text",ExpressionUUID->"e0a790cc-0a38-40b2-b4fe-27446b5c7b2b"],
Cell[CellGroupData[{
Cell[149509, 3775, 1044, 25, 37, "Input",ExpressionUUID->"df999e65-499f-403f-9c56-927005759792"],
Cell[150556, 3802, 13780, 247, 166, "Output",ExpressionUUID->"8c9d41fa-9af6-4600-b730-3e4b1fe73bbd"]
}, Open  ]],
Cell[164351, 4052, 396, 8, 38, "Text",ExpressionUUID->"f5373482-0438-4039-85aa-ddc4f6624fe9"]
}, Closed]],
Cell[CellGroupData[{
Cell[164784, 4065, 352, 7, 18, "Subsubsection",ExpressionUUID->"09900c50-a81d-43ce-a96e-b3eac6335e90"],
Cell[165139, 4074, 173, 3, 23, "Text",ExpressionUUID->"5b039484-d13c-4603-be52-b72281a58c18"],
Cell[CellGroupData[{
Cell[165337, 4081, 312, 6, 21, "Input",ExpressionUUID->"32af88a6-de74-428e-a5cf-1a0fd6901b98"],
Cell[165652, 4089, 306, 5, 23, "Output",ExpressionUUID->"5a9bf2e2-886e-47e8-bc89-135c3a1286f0"]
}, Open  ]],
Cell[165973, 4097, 227, 5, 23, "Text",ExpressionUUID->"8809b9c5-4afd-4689-9b23-319d7168c738"],
Cell[166203, 4104, 360, 10, 22, "Input",ExpressionUUID->"c31449a7-44b1-44cc-94b6-fe6d3d6ecdf7"],
Cell[CellGroupData[{
Cell[166588, 4118, 351, 7, 21, "Input",ExpressionUUID->"2cb9e7bb-a874-461e-8a57-e126e640eb64"],
Cell[166942, 4127, 281, 5, 23, "Output",ExpressionUUID->"819117c2-784d-4cff-be6a-516d090d84d3"]
}, Open  ]],
Cell[167238, 4135, 421, 9, 38, "Text",ExpressionUUID->"e4ac97a7-82af-435d-a7b2-be13a24dd137"],
Cell[CellGroupData[{
Cell[167684, 4148, 249, 5, 21, "Input",ExpressionUUID->"d2b908d7-a2bc-42dd-a0cd-9f51ca15f9c1"],
Cell[167936, 4155, 177, 3, 23, "Output",ExpressionUUID->"2a19e7e4-285e-481a-bda9-3e8f671cb060"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168150, 4163, 304, 6, 21, "Input",ExpressionUUID->"8434e574-7922-4d49-9a0c-27cabb6ff387"],
Cell[168457, 4171, 177, 3, 23, "Output",ExpressionUUID->"fe819094-e30b-4b20-bdcd-3472ed86b91f"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

